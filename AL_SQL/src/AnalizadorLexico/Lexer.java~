/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;
import static AnalizadorLexico.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/danil/Desktop/Compiladores/AL-xicoDeSQL/AL_SQL/src/AnalizadorLexico/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\33\1\63\1\63\1\31\22\0\1\4\1\17\1\0"+
    "\1\30\1\0\1\15\1\20\1\32\1\24\1\25\1\15\1\14\1\4"+
    "\1\12\1\13\1\15\2\6\10\3\1\0\1\15\1\17\1\16\1\17"+
    "\1\0\1\15\1\34\1\47\1\44\1\35\1\36\1\45\1\53\1\46"+
    "\1\50\1\61\1\55\1\11\1\56\1\7\1\43\1\42\1\62\1\41"+
    "\1\51\1\40\1\10\1\60\1\57\1\37\1\52\1\54\1\22\1\0"+
    "\1\23\1\0\1\2\1\0\4\1\1\5\25\1\1\26\1\21\1\27"+
    "\7\0\1\63\u1fa2\0\1\63\1\63\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\3\2\5\6"+
    "\2\1\4\6\1\7\25\2\1\10\3\2\1\11\10\2"+
    "\1\0\1\12\1\0\1\13\1\0\1\7\4\2\1\11"+
    "\3\2\1\11\20\2\1\11\17\2\1\11\1\2\1\11"+
    "\2\2\1\11\26\2\1\11\1\2\1\11\21\2\1\11"+
    "\17\2\1\13\14\2\1\11\7\2\1\13\1\0\2\14"+
    "\1\2\1\11\7\2\1\11\7\2\1\11\50\2\1\11"+
    "\26\2\1\11\13\2\1\11\1\2\1\11\11\2\1\11"+
    "\12\2\1\11\4\2\1\11\7\2\1\10\1\13\1\11"+
    "\12\2\1\13\14\2\1\11\3\2\1\0\11\2\1\11"+
    "\3\2\1\11\3\2\1\11\17\2\1\11\2\2\1\11"+
    "\2\2\1\11\17\2\1\11\42\2\2\11\22\2\1\0"+
    "\1\2\1\11\46\2\1\11\30\2\1\11\5\2\1\0"+
    "\1\11\46\2\1\0\11\2\1\11\1\2\1\11\11\2"+
    "\1\11\5\2\1\11\6\2\1\11\3\2\1\11\34\2"+
    "\1\11\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\64\0\150\0\234\0\320\0\234\0\u0104\0\u0138"+
    "\0\u016c\0\u01a0\0\u01d4\0\u0208\0\64\0\u023c\0\u0270\0\u02a4"+
    "\0\u02d8\0\u030c\0\u0340\0\u0374\0\u03a8\0\u03dc\0\u0410\0\u0444"+
    "\0\u0478\0\u04ac\0\u04e0\0\u0514\0\u0548\0\u057c\0\u05b0\0\u05e4"+
    "\0\u0618\0\u064c\0\u0680\0\u06b4\0\u06e8\0\u071c\0\u0750\0\u0784"+
    "\0\u07b8\0\u07ec\0\u0820\0\u0854\0\u0888\0\u08bc\0\u08f0\0\u0924"+
    "\0\u0958\0\u098c\0\u09c0\0\u09f4\0\u0a28\0\u0a5c\0\u0a90\0\u0ac4"+
    "\0\u0af8\0\u01d4\0\u0b2c\0\u0b60\0\u0b94\0\u0bc8\0\u0bfc\0\u0c30"+
    "\0\u0c64\0\150\0\u0c98\0\u0ccc\0\u0d00\0\u0d34\0\u0d68\0\u0d9c"+
    "\0\u0dd0\0\u0e04\0\u0e38\0\u0e6c\0\u0ea0\0\u0ed4\0\u0f08\0\u0f3c"+
    "\0\u0f70\0\u0fa4\0\u0fd8\0\u100c\0\u1040\0\u1074\0\u10a8\0\u10dc"+
    "\0\u1110\0\u1144\0\u1178\0\u11ac\0\u11e0\0\u1214\0\u1248\0\u127c"+
    "\0\u12b0\0\u12e4\0\u1318\0\u134c\0\u1380\0\u13b4\0\u13e8\0\u141c"+
    "\0\u1450\0\u1484\0\u14b8\0\u14ec\0\u1520\0\u1554\0\u1588\0\u15bc"+
    "\0\u15f0\0\u1624\0\u1658\0\u168c\0\u16c0\0\u16f4\0\u1728\0\u175c"+
    "\0\u1790\0\u17c4\0\u17f8\0\u182c\0\u1860\0\u1894\0\u18c8\0\u18fc"+
    "\0\u1930\0\u1964\0\u1998\0\u19cc\0\u1a00\0\u1a34\0\u1a68\0\u1a9c"+
    "\0\u1ad0\0\u1b04\0\u1b38\0\u1b6c\0\u1ba0\0\u1bd4\0\u1c08\0\u1c3c"+
    "\0\u1c70\0\u1ca4\0\u1cd8\0\u1d0c\0\u1d40\0\u1d74\0\u1da8\0\u1ddc"+
    "\0\u1e10\0\u1e44\0\u1e78\0\u1eac\0\u1ee0\0\u1f14\0\u1f48\0\u1f7c"+
    "\0\u1fb0\0\u1fe4\0\u2018\0\u204c\0\u2080\0\u20b4\0\u20e8\0\u211c"+
    "\0\u2150\0\u2184\0\u21b8\0\u21ec\0\u2220\0\u2254\0\u2288\0\u22bc"+
    "\0\u22f0\0\u2324\0\u2358\0\u238c\0\u23c0\0\u23f4\0\u2428\0\u245c"+
    "\0\u2490\0\u24c4\0\u24f8\0\u252c\0\u2560\0\u2594\0\64\0\u25c8"+
    "\0\u25fc\0\u2630\0\u2664\0\u2698\0\u10a8\0\u26cc\0\u2700\0\u2734"+
    "\0\u2768\0\u279c\0\u27d0\0\u2804\0\u2838\0\u286c\0\u28a0\0\u28d4"+
    "\0\u2908\0\u293c\0\u2970\0\u29a4\0\u29d8\0\u2a0c\0\u2a40\0\u2a74"+
    "\0\u2aa8\0\u2adc\0\u2b10\0\u2b44\0\u2b78\0\u2bac\0\u2be0\0\u2c14"+
    "\0\u2c48\0\u2c7c\0\u2cb0\0\u2ce4\0\u2d18\0\u2d4c\0\u2d80\0\u2db4"+
    "\0\u2de8\0\u2e1c\0\u2e50\0\u2e84\0\u2eb8\0\u2eec\0\u2f20\0\u2f54"+
    "\0\u2f88\0\u2fbc\0\u2ff0\0\u3024\0\u3058\0\u308c\0\u30c0\0\u30f4"+
    "\0\u3128\0\u315c\0\u3190\0\u31c4\0\u31f8\0\u322c\0\u3260\0\u3294"+
    "\0\u32c8\0\u32fc\0\u3330\0\u3364\0\u3398\0\u33cc\0\u3400\0\u3434"+
    "\0\u3468\0\u349c\0\u34d0\0\u3504\0\u3538\0\u356c\0\u35a0\0\u35d4"+
    "\0\u3608\0\u363c\0\u3670\0\u36a4\0\u238c\0\u36d8\0\u370c\0\u3740"+
    "\0\u3774\0\u37a8\0\u37dc\0\u3810\0\u3844\0\u3878\0\u38ac\0\u38e0"+
    "\0\u3914\0\u3948\0\u397c\0\u39b0\0\u39e4\0\u3a18\0\u3a4c\0\u3a80"+
    "\0\u3ab4\0\u3ae8\0\u3b1c\0\u3b50\0\u3b84\0\u3bb8\0\u3bec\0\u3c20"+
    "\0\u3c54\0\u3c88\0\u3cbc\0\u3cf0\0\u3d24\0\u3d58\0\u3d8c\0\u3dc0"+
    "\0\u3df4\0\u3e28\0\u3e5c\0\u3e90\0\u3ec4\0\u3ef8\0\u3f2c\0\u3f60"+
    "\0\u3f94\0\u3f94\0\u3fc8\0\u3ffc\0\u4030\0\u4064\0\u4098\0\u40cc"+
    "\0\u4100\0\u4134\0\u4168\0\u419c\0\u41d0\0\u4204\0\u4238\0\u426c"+
    "\0\u42a0\0\u42d4\0\u4308\0\u433c\0\u4370\0\u43a4\0\u43d8\0\u440c"+
    "\0\u4440\0\u4474\0\u44a8\0\u44dc\0\u4510\0\u4544\0\u4578\0\u45ac"+
    "\0\u45e0\0\u4614\0\u4648\0\u467c\0\u46b0\0\u46e4\0\u4718\0\u474c"+
    "\0\u4780\0\u47b4\0\u47e8\0\u481c\0\u4850\0\u4884\0\u48b8\0\u48ec"+
    "\0\u4920\0\u4954\0\u4988\0\u49bc\0\u49f0\0\u4a24\0\u4a58\0\u4a8c"+
    "\0\u4ac0\0\u4af4\0\u4b28\0\u4b5c\0\u4b90\0\u4bc4\0\u4bf8\0\u4c2c"+
    "\0\u4c60\0\u4c94\0\u4cc8\0\u4cfc\0\u4d30\0\u4d64\0\u4d98\0\u4dcc"+
    "\0\u4e00\0\u4e34\0\u4e68\0\u4e9c\0\u4ed0\0\u4f04\0\u4f38\0\u4f6c"+
    "\0\u4fa0\0\u4fd4\0\u5008\0\u503c\0\u3df4\0\u5070\0\u50a4\0\u50d8"+
    "\0\u510c\0\u5140\0\u5174\0\u51a8\0\u51dc\0\u5210\0\u5244\0\u5278"+
    "\0\u52ac\0\u52e0\0\u5314\0\u5348\0\u537c\0\u53b0\0\u53e4\0\u5418"+
    "\0\u544c\0\u5480\0\u54b4\0\u54e8\0\u551c\0\u5550\0\u5584\0\u55b8"+
    "\0\u55ec\0\u5620\0\u5654\0\u5688\0\u56bc\0\u56f0\0\u5724\0\u5758"+
    "\0\u578c\0\u57c0\0\u57f4\0\u5828\0\u585c\0\u5890\0\u58c4\0\u58f8"+
    "\0\u592c\0\u5960\0\u5994\0\u59c8\0\u25fc\0\u59fc\0\u5a30\0\u5a64"+
    "\0\u5a98\0\u5acc\0\u5b00\0\u5b34\0\u5b68\0\u5b9c\0\u5bd0\0\u5c04"+
    "\0\u5c38\0\u5c6c\0\u5ca0\0\u5cd4\0\u5d08\0\u5d3c\0\u5d70\0\u5da4"+
    "\0\u5dd8\0\u5e0c\0\u5e40\0\u5e74\0\u5ea8\0\u5edc\0\u5f10\0\u5f44"+
    "\0\u5f78\0\u5fac\0\u5fe0\0\u6014\0\u6048\0\u607c\0\u60b0\0\u60e4"+
    "\0\u3844\0\u6118\0\u614c\0\u6180\0\u61b4\0\u61e8\0\u621c\0\u6250"+
    "\0\u6284\0\u62b8\0\u62ec\0\u6320\0\u6354\0\u6388\0\u63bc\0\u63f0"+
    "\0\u6424\0\u6458\0\u648c\0\u64c0\0\u64f4\0\u6528\0\u655c\0\u6590"+
    "\0\u65c4\0\u65f8\0\u662c\0\u6660\0\u6694\0\u66c8\0\u66fc\0\u6730"+
    "\0\u6764\0\u6798\0\u67cc\0\u6800\0\u6834\0\u6868\0\u689c\0\u4098"+
    "\0\u68d0\0\u6904\0\u6938\0\u696c\0\u69a0\0\u69d4\0\u2630\0\u6a08"+
    "\0\u6a3c\0\u6a70\0\u6aa4\0\u6ad8\0\u6b0c\0\u6b40\0\u6b74\0\u6ba8"+
    "\0\u6bdc\0\u6c10\0\u6c44\0\u6c78\0\u6cac\0\u6ce0\0\u6d14\0\u6d48"+
    "\0\u6d7c\0\u6db0\0\u6de4\0\u6e18\0\u6e4c\0\u6e80\0\u6eb4\0\u6ee8"+
    "\0\u6f1c\0\u6f50\0\u6f84\0\u6fb8\0\u6fec\0\u7020\0\u7054\0\u7088"+
    "\0\u70bc\0\u70f0\0\u7124\0\u7158\0\u718c\0\u71c0\0\u71f4\0\u7228"+
    "\0\u725c\0\u7290\0\u72c4\0\u72f8\0\u732c\0\u7360\0\u7394\0\u73c8"+
    "\0\u73fc\0\u2490\0\u7430\0\u7464\0\u7498\0\u74cc\0\u7500\0\u7534"+
    "\0\u13e8\0\u7568\0\u759c\0\u70bc\0\u75d0\0\u7604\0\u3ab4\0\u7638"+
    "\0\u766c\0\64\0\u76a0\0\u76d4\0\u7708\0\u773c\0\u7770\0\u77a4"+
    "\0\u77d8\0\u780c\0\u7840\0\u7874\0\u78a8\0\u78dc\0\u7910\0\u7944"+
    "\0\u7978\0\u79ac\0\u79e0\0\u7a14\0\u7a48\0\u7a7c\0\u7ab0\0\u7ae4"+
    "\0\u7b18\0\u7b4c\0\u7b80\0\u7bb4\0\u7be8\0\u7c1c\0\u7c50\0\u7c84"+
    "\0\u7cb8\0\u7cec\0\u7d20\0\u7d54\0\u7d88\0\u7dbc\0\u7df0\0\u7e24"+
    "\0\u7e58\0\u7e8c\0\u7ec0\0\u7ef4\0\u7f28\0\u7f5c\0\u7f90\0\u7fc4"+
    "\0\u7ff8\0\u802c\0\u8060\0\u8094\0\u80c8\0\u77d8\0\u80fc\0\u8130"+
    "\0\u8164\0\u8198\0\u81cc\0\u8200\0\u8234";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\2\1\4\1\5\1\3\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\2\16\1\17"+
    "\1\20\1\21\1\15\1\22\1\15\1\23\1\15\1\24"+
    "\1\5\1\25\1\5\1\26\1\27\1\30\1\3\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\3\66\0\3\3\1\0\5\3\22\0\27\3"+
    "\4\0\1\4\2\0\1\4\4\0\1\53\54\0\1\5"+
    "\24\0\1\5\1\0\1\5\31\0\3\3\1\0\3\3"+
    "\1\54\1\3\22\0\1\55\1\3\1\56\4\3\1\57"+
    "\1\60\16\3\2\0\3\3\1\0\2\3\1\61\2\3"+
    "\22\0\6\3\1\62\6\3\1\63\11\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\64\1\3\1\65\4\3\1\66"+
    "\4\3\1\67\12\3\4\0\1\70\2\0\1\70\3\0"+
    "\1\71\1\72\53\0\1\73\2\0\1\73\60\0\1\70"+
    "\2\0\1\70\4\0\1\72\66\0\1\15\65\0\1\15"+
    "\64\0\1\15\65\0\1\15\65\0\1\15\65\0\1\15"+
    "\64\0\1\15\33\0\31\25\1\74\1\75\1\74\30\25"+
    "\1\0\3\3\1\0\2\3\1\76\1\77\1\100\22\0"+
    "\1\3\1\101\2\3\1\102\1\103\2\3\1\104\2\3"+
    "\1\105\1\3\1\106\6\3\1\107\2\3\2\0\3\3"+
    "\1\0\3\3\1\110\1\3\22\0\1\111\1\3\1\112"+
    "\2\3\1\113\1\3\1\114\3\3\1\115\1\116\12\3"+
    "\2\0\3\3\1\0\2\3\1\117\1\3\1\120\22\0"+
    "\3\3\1\121\1\3\1\122\7\3\1\123\11\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\124\1\3\1\125\2\3"+
    "\1\126\1\3\1\127\2\3\1\130\1\3\1\131\1\132"+
    "\11\3\2\0\3\3\1\0\3\3\1\133\1\3\22\0"+
    "\1\134\1\3\1\135\4\3\1\136\4\3\1\137\12\3"+
    "\2\0\3\3\1\0\3\3\1\140\1\141\22\0\1\142"+
    "\1\3\1\143\2\3\1\144\1\3\1\145\4\3\1\146"+
    "\12\3\2\0\3\3\1\0\2\3\1\147\1\150\1\3"+
    "\22\0\5\3\1\151\1\152\1\3\1\153\1\154\12\3"+
    "\1\155\2\3\2\0\3\3\1\0\3\3\1\156\1\157"+
    "\22\0\1\160\4\3\1\161\1\3\1\162\2\3\1\163"+
    "\14\3\2\0\3\3\1\0\3\3\1\164\1\165\22\0"+
    "\1\166\1\3\1\167\2\3\1\170\1\3\1\171\4\3"+
    "\1\172\12\3\2\0\3\3\1\0\5\3\22\0\1\173"+
    "\6\3\1\174\17\3\2\0\3\3\1\0\3\3\1\175"+
    "\1\3\22\0\1\176\1\3\1\177\2\3\1\200\1\3"+
    "\1\201\4\3\1\202\1\3\1\102\10\3\2\0\3\3"+
    "\1\0\2\3\1\203\2\3\22\0\1\3\1\204\7\3"+
    "\1\102\3\3\1\205\4\3\1\206\4\3\2\0\3\3"+
    "\1\0\3\3\1\207\1\3\22\0\1\210\1\3\1\211"+
    "\1\3\1\212\1\3\1\213\1\214\1\215\1\3\1\216"+
    "\1\3\1\217\1\3\1\220\3\3\1\221\3\3\1\222"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\223\24\3"+
    "\2\0\3\3\1\0\4\3\1\224\22\0\2\3\1\225"+
    "\2\3\1\226\1\3\1\227\17\3\2\0\3\3\1\0"+
    "\5\3\22\0\7\3\1\230\17\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\231\11\3\1\232\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\233\1\3\1\234\4\3"+
    "\1\235\4\3\1\236\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\237\4\3\1\240\1\3\1\241\2\3\1\242"+
    "\1\3\1\243\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\1\244\13\3\1\245\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\7\3\1\246\17\3\4\0\1\53\1\0\1\247"+
    "\1\53\27\0\1\247\26\0\3\3\1\0\4\3\1\250"+
    "\22\0\22\3\1\251\4\3\2\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\252\15\3\1\253\4\3\2\0\3\3"+
    "\1\0\5\3\22\0\3\3\1\225\23\3\2\0\3\3"+
    "\1\0\2\3\1\254\2\3\22\0\4\3\1\102\3\3"+
    "\1\255\16\3\2\0\3\3\1\0\5\3\22\0\12\3"+
    "\1\223\14\3\2\0\3\3\1\0\5\3\22\0\6\3"+
    "\1\256\5\3\1\257\4\3\1\260\5\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\3\1\261\4\3\1\262\20\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\263\1\3\1\264"+
    "\11\3\1\265\12\3\2\0\3\3\1\0\2\3\1\266"+
    "\2\3\22\0\15\3\1\225\11\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\267\10\3\1\225\12\3\1\270\2\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\271\7\3\1\272"+
    "\12\3\1\262\3\3\2\0\3\3\1\0\2\3\1\273"+
    "\2\3\22\0\21\3\1\103\5\3\4\0\1\70\2\0"+
    "\1\70\4\0\1\53\50\0\31\71\1\0\1\71\1\0"+
    "\30\71\3\0\1\73\1\0\1\274\1\73\27\0\1\274"+
    "\25\0\32\74\1\275\31\74\31\25\1\276\1\75\1\277"+
    "\30\25\1\0\3\3\1\0\5\3\22\0\1\3\1\102"+
    "\14\3\1\102\10\3\2\0\3\3\1\0\5\3\22\0"+
    "\4\3\1\300\22\3\2\0\3\3\1\0\4\3\1\301"+
    "\22\0\4\3\1\262\22\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\102\25\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\102\24\3\2\0\3\3\1\0\5\3\22\0"+
    "\4\3\1\302\22\3\2\0\3\3\1\0\5\3\22\0"+
    "\15\3\1\303\11\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\102\4\3\1\304\11\3\2\0\3\3\1\0"+
    "\5\3\22\0\17\3\1\102\7\3\2\0\3\3\1\0"+
    "\5\3\22\0\22\3\1\305\4\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\306\11\3\1\102\10\3\2\0"+
    "\3\3\1\0\2\3\1\231\1\3\1\307\22\0\1\310"+
    "\7\3\1\311\1\312\3\3\1\313\11\3\2\0\3\3"+
    "\1\0\5\3\22\0\7\3\1\305\17\3\2\0\3\3"+
    "\1\0\3\3\1\314\1\3\22\0\22\3\1\315\4\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\316\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\317\14\3\1\320"+
    "\11\3\2\0\3\3\1\0\5\3\22\0\1\3\1\321"+
    "\25\3\2\0\3\3\1\0\5\3\22\0\15\3\1\103"+
    "\11\3\2\0\3\3\1\0\5\3\22\0\2\3\1\322"+
    "\1\3\1\323\3\3\1\324\3\3\1\325\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\5\3\1\326\21\3\2\0"+
    "\3\3\1\0\5\3\22\0\10\3\1\327\16\3\2\0"+
    "\3\3\1\0\5\3\22\0\13\3\1\330\13\3\2\0"+
    "\3\3\1\0\5\3\22\0\3\3\1\331\16\3\1\332"+
    "\4\3\2\0\3\3\1\0\3\3\1\333\1\3\22\0"+
    "\1\334\13\3\1\335\1\3\1\336\10\3\2\0\3\3"+
    "\1\0\5\3\22\0\6\3\1\102\20\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\337\24\3\2\0\3\3"+
    "\1\0\5\3\22\0\22\3\1\340\4\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\341\24\3\2\0\3\3"+
    "\1\0\4\3\1\103\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\342\12\3\2\0\3\3\1\0"+
    "\4\3\1\343\22\0\1\344\3\3\1\345\1\3\1\346"+
    "\1\3\1\347\1\350\3\3\1\351\6\3\1\352\2\3"+
    "\2\0\3\3\1\0\4\3\1\353\22\0\23\3\1\354"+
    "\3\3\2\0\3\3\1\0\5\3\22\0\17\3\1\355"+
    "\7\3\2\0\3\3\1\0\5\3\22\0\13\3\1\356"+
    "\13\3\2\0\3\3\1\0\5\3\22\0\1\337\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\3\1\102\3\3"+
    "\1\357\7\3\1\360\11\3\2\0\3\3\1\0\5\3"+
    "\22\0\5\3\1\361\21\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\362\4\3\1\363\4\3\1\364\12\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\365\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\24\3\1\366\2\3"+
    "\2\0\3\3\1\0\4\3\1\231\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\367\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\3\1\262\25\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\370\1\3\1\302"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\4\3\1\371"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\11\3\1\372"+
    "\15\3\2\0\3\3\1\0\5\3\22\0\2\3\1\373"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\5\3\1\374"+
    "\21\3\2\0\3\3\1\0\3\3\1\375\1\3\22\0"+
    "\7\3\1\120\17\3\2\0\3\3\1\0\5\3\22\0"+
    "\4\3\1\376\10\3\1\377\11\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0100\4\3\1\u0101\17\3\2\0"+
    "\3\3\1\0\2\3\1\u0102\1\u0103\1\u0104\22\0\1\u0105"+
    "\4\3\1\u0106\14\3\1\u0107\4\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\u0108\1\3\1\u0109\24\3\2\0\3\3"+
    "\1\0\2\3\1\u010a\1\3\1\u010b\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u010c\17\3\2\0"+
    "\3\3\1\0\4\3\1\120\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u010d\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u010e\4\3\1\u010f\17\3"+
    "\2\0\3\3\1\0\3\3\1\u0110\1\3\22\0\5\3"+
    "\1\u0111\21\3\2\0\3\3\1\0\4\3\1\u0112\22\0"+
    "\5\3\1\u0113\21\3\2\0\3\3\1\0\5\3\22\0"+
    "\24\3\1\u0114\2\3\2\0\3\3\1\0\3\3\1\u0115"+
    "\1\u0116\22\0\27\3\2\0\3\3\1\0\4\3\1\u0117"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\10\3"+
    "\1\u0118\16\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u0119\12\3\1\246\7\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u011a\4\3\1\u011b\17\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u011c\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u011d\22\3\2\0\3\3"+
    "\1\0\2\3\1\262\2\3\22\0\1\3\1\u011e\2\3"+
    "\1\u011f\1\3\1\u0120\1\3\1\u0121\3\3\1\u0122\1\u0123"+
    "\11\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u0124"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\7\3\1\u0125"+
    "\17\3\2\0\3\3\1\0\5\3\22\0\22\3\1\u0126"+
    "\4\3\2\0\3\3\1\0\5\3\22\0\13\3\1\u0127"+
    "\6\3\1\102\4\3\2\0\3\3\1\0\5\3\22\0"+
    "\24\3\1\103\2\3\2\0\3\3\1\0\4\3\1\u0128"+
    "\22\0\4\3\1\u0129\3\3\1\u012a\4\3\1\u012b\4\3"+
    "\1\u012c\4\3\2\0\3\3\1\0\5\3\22\0\1\u012d"+
    "\26\3\2\0\3\3\1\0\5\3\22\0\1\u012e\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\22\3\1\103\4\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u012f\4\3"+
    "\1\u0130\14\3\2\0\3\3\1\0\3\3\1\u0131\1\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\20\3"+
    "\1\103\6\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u0132\11\3\2\0\3\3\1\0\5\3\22\0\1\u0133"+
    "\26\3\2\0\3\3\1\0\4\3\1\u0134\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u0115\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u0135\17\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\102\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\u0103\6\3\1\u0136\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u0137\22\3"+
    "\2\0\3\3\1\0\2\3\1\103\2\3\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\16\3\1\102\10\3"+
    "\2\0\3\3\1\0\4\3\1\u010b\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\3\3\1\102\1\u010d\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\263\21\3"+
    "\2\0\3\3\1\0\2\3\1\201\2\3\22\0\1\3"+
    "\1\u0138\25\3\2\0\3\3\1\0\2\3\1\u0139\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u013a\12\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u013b\12\3\2\0\3\3\1\0\5\3\22\0\5\3"+
    "\1\u0117\21\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\u013c\11\3\1\133\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\u013d\22\3\2\0\3\3\1\0\4\3"+
    "\1\u013e\22\0\5\3\1\u013f\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0140\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\337\12\3\4\0\1\u0141\2\0"+
    "\1\u0141\3\0\1\u0142\1\0\1\u0142\50\0\3\3\1\0"+
    "\4\3\1\u0143\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u0144\24\3\2\0\3\3\1\0\3\3"+
    "\1\u0145\1\3\22\0\14\3\1\u0146\12\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u0147\24\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\102\5\3\1\u0148\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\12\3\1\u0149\14\3"+
    "\2\0\3\3\1\0\5\3\22\0\14\3\1\146\12\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\337\16\3"+
    "\1\u014a\2\0\3\3\1\0\2\3\1\u014b\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\1\u013b\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0115\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\17\3\1\103\7\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\102\21\3"+
    "\2\0\3\3\1\0\2\3\1\107\2\3\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\17\3\1\u014c\7\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\3\1\u0114\25\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u010b\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\3\1\102\25\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u010b\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u014d\24\3\4\0"+
    "\1\u014e\2\0\1\u014e\3\0\1\u014e\1\0\1\u014e\47\0"+
    "\31\74\1\276\1\275\1\277\30\74\33\0\1\277\31\0"+
    "\3\3\1\0\5\3\22\0\12\3\1\u014f\14\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u0150\17\3\2\0"+
    "\3\3\1\0\5\3\22\0\14\3\1\u0151\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u0152\17\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u0153\24\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\u0154\1\3\1\102\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0155\24\3"+
    "\2\0\3\3\1\0\4\3\1\u0156\22\0\27\3\2\0"+
    "\3\3\1\0\4\3\1\u0157\22\0\14\3\1\u0158\12\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u0159\1\3\1\u015a"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\10\3\1\u015b"+
    "\16\3\2\0\3\3\1\0\5\3\22\0\13\3\1\133"+
    "\13\3\2\0\3\3\1\0\5\3\22\0\1\246\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\102\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\17\3\1\u015c\7\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u015d\3\3"+
    "\1\u015e\10\3\1\102\5\3\2\0\3\3\1\0\5\3"+
    "\1\u015f\21\0\27\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\u0139\16\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u0160\2\3\1\u0161\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0162\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\102\10\3\1\u0163\11\3\2\0"+
    "\3\3\1\0\4\3\1\u0164\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\u0165\26\3\2\0\3\3\1\0"+
    "\4\3\1\u0166\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\u0167\22\3\2\0\3\3\1\0\5\3"+
    "\22\0\6\3\1\u0168\20\3\2\0\3\3\1\0\2\3"+
    "\1\u0150\2\3\22\0\2\3\1\102\24\3\2\0\3\3"+
    "\1\0\2\3\1\u0169\2\3\22\0\14\3\1\u016a\12\3"+
    "\2\0\3\3\1\0\5\3\22\0\17\3\1\u016b\2\3"+
    "\1\102\4\3\2\0\1\3\1\u016c\1\3\1\0\5\3"+
    "\22\0\27\3\2\0\3\3\1\0\2\3\1\102\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\u016d\24\3\2\0\3\3\1\0\5\3\22\0\26\3"+
    "\1\u016e\2\0\3\3\1\0\5\3\22\0\15\3\1\u016f"+
    "\11\3\2\0\3\3\1\0\5\3\22\0\1\u0170\26\3"+
    "\2\0\3\3\1\0\4\3\1\102\22\0\1\3\1\u0171"+
    "\25\3\2\0\3\3\1\0\3\3\1\u0172\1\3\22\0"+
    "\27\3\2\0\3\3\1\0\4\3\1\u0173\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\u0174\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0175\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u0176\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0177\4\3"+
    "\1\u0178\17\3\2\0\3\3\1\0\4\3\1\u0179\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\10\3\1\u017a"+
    "\4\3\1\102\1\3\1\u017b\7\3\2\0\3\3\1\0"+
    "\5\3\22\0\12\3\1\225\14\3\2\0\3\3\1\0"+
    "\4\3\1\u017c\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\u017d\22\3\2\0\3\3\1\0\5\3"+
    "\22\0\10\3\1\272\16\3\2\0\3\3\1\0\5\3"+
    "\22\0\10\3\1\u017e\16\3\2\0\3\3\1\0\5\3"+
    "\22\0\6\3\1\u0157\1\3\1\u017f\4\3\1\u0180\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\u0181\16\3"+
    "\2\0\3\3\1\0\2\3\1\225\2\3\22\0\7\3"+
    "\1\u0115\12\3\1\u0182\1\3\1\u0183\2\3\2\0\3\3"+
    "\1\0\5\3\22\0\14\3\1\104\12\3\2\0\3\3"+
    "\1\0\5\3\22\0\7\3\1\225\17\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u0115\3\3\1\u0120\20\3"+
    "\2\0\3\3\1\0\2\3\1\u0184\2\3\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0185\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\u0186\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u0187\21\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u0188\7\3"+
    "\1\u0189\11\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u018a\11\3\2\0\3\3\1\0\5\3\22\0\1\u018b"+
    "\26\3\2\0\3\3\1\0\5\3\22\0\2\3\1\102"+
    "\1\3\1\102\3\3\1\u018c\16\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\u0155\26\3\2\0\3\3\1\0\5\3"+
    "\22\0\15\3\1\u0147\11\3\2\0\3\3\1\0\2\3"+
    "\1\u018d\2\3\22\0\4\3\1\u018e\10\3\1\u018f\6\3"+
    "\1\u0190\2\3\2\0\3\3\1\0\2\3\1\225\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\3\3\1\u0191\1\u0192"+
    "\22\0\27\3\2\0\3\3\1\0\4\3\1\u0193\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\5\3\1\u0194"+
    "\21\3\2\0\3\3\1\0\5\3\22\0\6\3\1\u0195"+
    "\13\3\1\u0196\4\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\u0197\21\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\u0198\16\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\104\16\3\2\0\3\3\1\0\4\3\1\102"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\1\225"+
    "\26\3\2\0\3\3\1\0\5\3\22\0\10\3\1\u011c"+
    "\16\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u0199"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\22\3\1\102"+
    "\4\3\2\0\3\3\1\0\2\3\1\271\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u019a"+
    "\1\3\1\u019b\22\3\2\0\3\3\1\0\4\3\1\u019c"+
    "\22\0\2\3\1\102\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\15\3\1\225\11\3\2\0\3\3\1\0\5\3"+
    "\22\0\14\3\1\265\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\3\1\u019d\25\3\2\0\3\3\1\0\5\3"+
    "\22\0\21\3\1\102\5\3\2\0\3\3\1\0\5\3"+
    "\22\0\21\3\1\u0136\5\3\2\0\3\3\1\0\5\3"+
    "\22\0\23\3\1\u019e\3\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\u0117\26\3\2\0\3\3\1\0\5\3\22\0"+
    "\23\3\1\120\3\3\2\0\3\3\1\0\5\3\22\0"+
    "\12\3\1\102\14\3\2\0\1\3\1\u019f\1\3\1\0"+
    "\5\3\22\0\27\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u01a0\11\3\1\u01a1\12\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u01a2\4\3\1\102\17\3\2\0"+
    "\3\3\1\0\3\3\1\225\1\3\22\0\27\3\2\0"+
    "\3\3\1\0\4\3\1\u01a3\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u01a4\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u01a5\24\3\2\0\3\3"+
    "\1\0\2\3\1\u01a6\2\3\22\0\27\3\2\0\3\3"+
    "\1\0\4\3\1\u01a7\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u01a8\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\15\3\1\u01a9\11\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u01aa\24\3\2\0\3\3\1\0"+
    "\3\3\1\u01ab\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\3\3\1\u01ac\1\3\22\0\4\3\1\302\2\3\1\u0110"+
    "\17\3\2\0\3\3\1\0\5\3\22\0\15\3\1\u01ad"+
    "\11\3\2\0\3\3\1\0\5\3\22\0\1\u01ae\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u01af\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\103\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\232\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u01b0\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u01b1\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u01b2\22\3"+
    "\2\0\3\3\1\0\4\3\1\u01b3\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u01b4\5\3\1\u01b5"+
    "\4\3\1\u01b6\5\3\1\u01b7\3\3\2\0\3\3\1\0"+
    "\5\3\22\0\13\3\1\272\13\3\2\0\3\3\1\0"+
    "\3\3\1\305\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\7\3\1\102\17\3\2\0\3\3\1\0"+
    "\3\3\1\133\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\3\3\1\u0155\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\u01b8\22\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\u01b9\22\3\2\0\3\3\1\0"+
    "\2\3\1\u01ba\2\3\22\0\5\3\1\103\21\3\2\0"+
    "\3\3\1\0\5\3\22\0\12\3\1\u01bb\14\3\2\0"+
    "\3\3\1\0\3\3\1\u01bc\1\3\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\10\3\1\60\5\3\1\u0114"+
    "\10\3\2\0\3\3\1\0\5\3\22\0\23\3\1\102"+
    "\3\3\4\0\1\u0141\2\0\1\u0141\56\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\u01bd\12\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\u017c\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\272\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\7\3\1\u01be\17\3\2\0\3\3\1\0"+
    "\5\3\22\0\15\3\1\102\11\3\2\0\3\3\1\0"+
    "\4\3\1\u01bf\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u01c0\24\3\2\0\3\3\1\0\3\3"+
    "\1\103\1\3\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\7\3\1\u01c1\17\3\2\0\3\3\1\0\3\3"+
    "\1\u01c2\1\3\22\0\27\3\2\0\3\3\1\0\2\3"+
    "\1\u0137\2\3\22\0\27\3\4\0\1\u014e\2\0\1\u014e"+
    "\56\0\3\3\1\0\5\3\22\0\7\3\1\u01c3\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\u0100\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\337\17\3"+
    "\2\0\3\3\1\0\4\3\1\u0195\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\5\3\1\104\21\3\2\0"+
    "\3\3\1\0\5\3\22\0\13\3\1\u01c4\13\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\103\22\3\2\0"+
    "\3\3\1\0\4\3\1\u01c5\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\u01c6\26\3\2\0\3\3\1\0"+
    "\5\3\22\0\22\3\1\272\4\3\2\0\3\3\1\0"+
    "\3\3\1\u01c7\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\u01c8\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\u01c9\21\3\2\0\3\3\1\0"+
    "\2\3\1\u01ca\2\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\u01cb\6\3\1\u01cc\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u01cd\17\3\37\0"+
    "\1\u01ce\26\0\3\3\1\0\5\3\22\0\5\3\1\u01be"+
    "\21\3\2\0\3\3\1\0\5\3\22\0\1\u01aa\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\6\3\1\u01cf\20\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u0147\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\24\3\1\u010b\2\3"+
    "\2\0\3\3\1\0\5\3\22\0\6\3\1\103\20\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u01d0\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\u01d1\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\u01d2\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\u01d3\11\3"+
    "\2\0\3\3\1\0\4\3\1\u0114\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\17\3\1\262\7\3\2\0"+
    "\3\3\1\0\5\3\22\0\10\3\1\u01d4\16\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u01d5\2\3\1\u01d6"+
    "\6\3\2\0\3\3\1\0\3\3\1\272\1\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u01b4"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u01d7"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u01d8"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\5\3\1\337"+
    "\21\3\2\0\3\3\1\0\5\3\22\0\14\3\1\u01d9"+
    "\12\3\2\0\3\3\1\0\2\3\1\u01da\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\5\3\1\u01db"+
    "\21\3\2\0\3\3\1\0\5\3\22\0\5\3\1\u01dc"+
    "\1\3\1\u01c6\17\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\225\21\3\2\0\3\3\1\0\5\3\22\0"+
    "\21\3\1\103\5\3\2\0\3\3\1\0\5\3\22\0"+
    "\13\3\1\u01dd\13\3\2\0\3\3\1\0\5\3\22\0"+
    "\7\3\1\u01de\17\3\2\0\3\3\1\0\3\3\1\u01df"+
    "\1\3\22\0\27\3\2\0\3\3\1\0\5\3\22\0"+
    "\14\3\1\316\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\14\3\1\272\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u0103\24\3\2\0\3\3\1\0\5\3\22\0"+
    "\14\3\1\u01e0\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u01e1\24\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u01e2\24\3\2\0\3\3\1\0\5\3\22\0"+
    "\1\u01e3\26\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u01e4\12\3\2\0\3\3\1\0\5\3\22\0\1\3"+
    "\1\u01e5\1\3\1\u01e6\1\3\1\u01e7\20\3\1\u01e8\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\u01e9\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u0163\24\3\2\0"+
    "\3\3\1\0\4\3\1\u01ea\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u01eb\24\3\2\0\3\3"+
    "\1\0\5\3\22\0\7\3\1\u0115\17\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u01ec\22\3\2\0\3\3"+
    "\1\0\4\3\1\u01ed\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\u01ee\26\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u01ef\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\u01f0\13\3\1\u01f1\12\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\u01f2\22\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0177\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\22\3\1\337\4\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\u01f3\26\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u01f4\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u01f5\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\14\3\1\225\12\3\2\0\1\3\1\u019f\1\3"+
    "\1\0\5\3\22\0\1\u01f6\26\3\2\0\3\3\1\0"+
    "\5\3\22\0\21\3\1\u01f7\5\3\2\0\3\3\1\0"+
    "\5\3\22\0\4\3\1\u01f8\22\3\2\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\u01f9\12\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\141\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\11\3\1\u01fa\15\3\2\0\3\3\1\0"+
    "\4\3\1\u01fb\22\0\27\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\130\24\3\2\0\3\3\1\0\4\3"+
    "\1\u01fc\22\0\27\3\2\0\3\3\1\0\5\3\22\0"+
    "\3\3\1\102\23\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\u01fd\16\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\u01fe\11\3\1\262\7\3\2\0\3\3\1\0"+
    "\3\3\1\u01ff\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\u0200\12\3\2\0\3\3\1\0"+
    "\2\3\1\u0201\2\3\22\0\5\3\1\225\21\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\u0202\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\104\26\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\3\1\u0203\25\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u0204\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\10\3\1\225\16\3\2\0\3\3"+
    "\1\0\5\3\22\0\15\3\1\262\11\3\2\0\3\3"+
    "\1\0\5\3\22\0\5\3\1\u0205\21\3\2\0\3\3"+
    "\1\0\5\3\22\0\14\3\1\u0206\12\3\2\0\3\3"+
    "\1\0\2\3\1\u0207\2\3\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\14\3\1\u0208\12\3\2\0\3\3"+
    "\1\0\5\3\22\0\22\3\1\u0209\4\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\3\1\u014b\25\3\2\0\3\3"+
    "\1\0\5\3\22\0\2\3\1\u020a\24\3\2\0\3\3"+
    "\1\0\4\3\1\u020b\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\5\3\1\u020c\21\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\102\6\3\1\u01ff\17\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u0100\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\u020d\26\3\2\0\3\3\1\0"+
    "\5\3\22\0\11\3\1\u0189\15\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0171\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u020e\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\14\3\1\u020f\12\3\2\0\3\3\1\0"+
    "\5\3\22\0\2\3\1\u0210\24\3\2\0\3\3\1\0"+
    "\5\3\22\0\11\3\1\102\15\3\2\0\3\3\1\0"+
    "\2\3\1\272\2\3\22\0\27\3\2\0\3\3\1\0"+
    "\3\3\1\375\1\3\22\0\27\3\2\0\3\3\1\0"+
    "\5\3\22\0\10\3\1\u0117\16\3\2\0\3\3\1\0"+
    "\5\3\22\0\23\3\1\337\3\3\2\0\3\3\1\0"+
    "\5\3\22\0\1\263\26\3\2\0\3\3\1\0\5\3"+
    "\22\0\5\3\1\u0211\21\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\120\26\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\103\21\3\2\0\3\3\1\0\4\3\1\225"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\5\3"+
    "\1\u0212\21\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0213\12\3\2\0\3\3\1\0\5\3\22\0\7\3"+
    "\1\u0208\17\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0214\12\3\2\0\3\3\1\0\2\3\1\u01aa\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\2\3\1\u0215\2\3"+
    "\22\0\27\3\40\0\1\u0216\25\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\u0217\22\3\2\0\3\3\1\0\5\3"+
    "\22\0\15\3\1\u0218\11\3\2\0\3\3\1\0\5\3"+
    "\22\0\14\3\1\217\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\5\3\1\u0182\21\3\2\0\3\3\1\0\4\3"+
    "\1\u0192\22\0\1\u010a\26\3\2\0\3\3\1\0\5\3"+
    "\22\0\7\3\1\u0219\17\3\2\0\3\3\1\0\5\3"+
    "\22\0\4\3\1\u021a\22\3\2\0\3\3\1\0\5\3"+
    "\22\0\7\3\1\u021b\17\3\2\0\3\3\1\0\5\3"+
    "\22\0\14\3\1\210\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\56\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\10\3\1\u01a7\16\3\2\0\3\3\1\0\5\3"+
    "\22\0\11\3\1\u021c\15\3\2\0\3\3\1\0\5\3"+
    "\22\0\2\3\1\u021d\24\3\2\0\3\3\1\0\5\3"+
    "\22\0\14\3\1\u01aa\12\3\2\0\3\3\1\0\5\3"+
    "\22\0\1\u01c0\26\3\2\0\3\3\1\0\3\3\1\u0103"+
    "\1\3\22\0\27\3\2\0\3\3\1\0\5\3\22\0"+
    "\14\3\1\u021e\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\15\3\1\302\11\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\210\21\3\2\0\3\3\1\0\5\3\22\0"+
    "\1\3\1\u021f\25\3\2\0\3\3\1\0\5\3\22\0"+
    "\5\3\1\231\21\3\2\0\3\3\1\0\4\3\1\u0220"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\1\u0221"+
    "\26\3\2\0\3\3\1\0\5\3\22\0\22\3\1\u010b"+
    "\4\3\2\0\3\3\1\0\5\3\22\0\7\3\1\u0222"+
    "\17\3\2\0\3\3\1\0\3\3\1\u0223\1\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\1\u0224\26\3"+
    "\2\0\3\3\1\0\2\3\1\u0225\2\3\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u0226\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\7\3\1\107\17\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\3\1\u0227\25\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\u01cf\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\14\3\1\u0228\12\3"+
    "\2\0\3\3\1\0\2\3\1\u014a\2\3\22\0\27\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u0229\21\3"+
    "\2\0\3\3\1\0\5\3\22\0\4\3\1\u022a\22\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\u012e\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\15\3\1\u022b\11\3"+
    "\2\0\3\3\1\0\5\3\22\0\10\3\1\u022c\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\6\3\1\u022d\20\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\u022e\24\3"+
    "\2\0\3\3\1\0\5\3\22\0\17\3\1\337\7\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u022f\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u01c0\17\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u0230\24\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\u0231\26\3\2\0\3\3"+
    "\1\0\5\3\22\0\15\3\1\u0128\6\3\1\272\2\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\3\1\103\25\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u0232\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u0233\11\3\2\0"+
    "\3\3\1\0\5\3\22\0\14\3\1\u0234\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\14\3\1\u0100\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\5\3\1\u0114\21\3\2\0"+
    "\3\3\1\0\5\3\22\0\14\3\1\u0235\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\7\3\1\u0236\17\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\u0237\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u0238\11\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\102\26\3\2\0\3\3"+
    "\1\0\5\3\22\0\22\3\1\u0239\4\3\2\0\3\3"+
    "\1\0\5\3\22\0\14\3\1\u0103\12\3\2\0\3\3"+
    "\1\0\5\3\22\0\5\3\1\u0189\21\3\2\0\3\3"+
    "\1\0\5\3\22\0\5\3\1\u023a\21\3\2\0\3\3"+
    "\1\0\5\3\22\0\24\3\1\262\2\3\2\0\3\3"+
    "\1\0\2\3\1\u023b\2\3\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\14\3\1\u023c\12\3\2\0\3\3"+
    "\1\0\5\3\22\0\1\314\1\3\1\271\24\3\2\0"+
    "\3\3\1\0\5\3\22\0\6\3\1\u0231\4\3\1\103"+
    "\13\3\2\0\3\3\1\0\5\3\22\0\13\3\1\u023d"+
    "\13\3\2\0\3\3\1\0\2\3\1\u0128\2\3\22\0"+
    "\27\3\37\0\1\u023e\26\0\3\3\1\0\5\3\22\0"+
    "\1\u023f\26\3\2\0\3\3\1\0\2\3\1\u0240\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\1\110"+
    "\26\3\2\0\3\3\1\0\2\3\1\u0241\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\14\3\1\u0242"+
    "\12\3\2\0\3\3\1\0\2\3\1\u0243\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\1\3\1\u0244"+
    "\25\3\2\0\3\3\1\0\3\3\1\u01c6\1\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u0245"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0246"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\23\3\1\u0247"+
    "\3\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u01e3"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\6\3\1\u0147"+
    "\20\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0248"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\5\3\1\u0249"+
    "\21\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u024a"+
    "\24\3\2\0\3\3\1\0\2\3\1\u024b\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\1\u024c\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\2\3\1\102\11\3"+
    "\1\u0151\12\3\2\0\3\3\1\0\5\3\22\0\6\3"+
    "\1\u024d\20\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u024e\22\3\2\0\3\3\1\0\5\3\22\0\7\3"+
    "\1\u020b\17\3\2\0\3\3\1\0\5\3\22\0\3\3"+
    "\1\u024f\23\3\2\0\3\3\1\0\5\3\22\0\10\3"+
    "\1\u0231\16\3\2\0\3\3\1\0\2\3\1\u0250\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u0189\22\3\2\0\3\3\1\0\4\3\1\u0251\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\14\3\1\u0170"+
    "\12\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0252"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0253"+
    "\22\3\2\0\3\3\1\0\2\3\1\u0254\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\14\3\1\u0255"+
    "\12\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0256"+
    "\22\3\2\0\1\3\1\u0257\1\3\1\0\5\3\22\0"+
    "\27\3\2\0\3\3\1\0\2\3\1\u0114\2\3\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\17\3\1\u0258"+
    "\7\3\2\0\3\3\1\0\5\3\22\0\20\3\1\u01a7"+
    "\6\3\2\0\3\3\1\0\3\3\1\u0259\1\3\22\0"+
    "\27\3\45\0\1\u025a\20\0\3\3\1\0\5\3\22\0"+
    "\22\3\1\u025b\4\3\2\0\3\3\1\0\5\3\22\0"+
    "\24\3\1\u0190\2\3\2\0\3\3\1\0\5\3\22\0"+
    "\2\3\1\u025c\24\3\2\0\3\3\1\0\5\3\22\0"+
    "\17\3\1\u021f\7\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\253\16\3\2\0\3\3\1\0\5\3\22\0"+
    "\10\3\1\u025d\16\3\2\0\3\3\1\0\5\3\22\0"+
    "\17\3\1\253\7\3\2\0\3\3\1\0\5\3\22\0"+
    "\1\u025e\26\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u025f\11\3\2\0\1\3\1\u0260\1\3\1\0\5\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\271\24\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u0261\11\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0262\12\3\2\0\3\3\1\0\5\3\22\0\7\3"+
    "\1\u0263\17\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\u0264\24\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u0261\22\3\2\0\3\3\1\0\5\3\22\0\17\3"+
    "\1\201\7\3\2\0\3\3\1\0\5\3\22\0\16\3"+
    "\1\u0265\10\3\2\0\3\3\1\0\5\3\22\0\16\3"+
    "\1\u0266\10\3\2\0\3\3\1\0\5\3\22\0\10\3"+
    "\1\u0267\16\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0268\12\3\2\0\3\3\1\0\5\3\22\0\5\3"+
    "\1\u0269\21\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u0249\22\3\2\0\3\3\1\0\5\3\22\0\6\3"+
    "\1\133\20\3\2\0\1\3\1\u026a\1\3\1\0\5\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\7\3"+
    "\1\u010b\17\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u026b\11\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\225\24\3\2\0\3\3\1\0\3\3\1\u01ab\1\3"+
    "\22\0\1\3\1\u0100\2\3\1\u026c\22\3\2\0\3\3"+
    "\1\0\5\3\22\0\4\3\1\u026d\22\3\2\0\3\3"+
    "\1\0\2\3\1\u026e\2\3\22\0\27\3\2\0\3\3"+
    "\1\0\2\3\1\267\2\3\22\0\27\3\2\0\3\3"+
    "\1\0\5\3\22\0\5\3\1\u011d\21\3\2\0\1\3"+
    "\1\u026f\1\3\1\0\5\3\22\0\10\3\1\u025d\16\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u0270\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u0271\3\3\1\u0272"+
    "\5\3\2\0\3\3\1\0\5\3\22\0\10\3\1\u0147"+
    "\16\3\2\0\3\3\1\0\5\3\22\0\7\3\1\u0136"+
    "\17\3\2\0\3\3\1\0\5\3\22\0\12\3\1\u0273"+
    "\7\3\1\u0274\4\3\2\0\3\3\1\0\5\3\22\0"+
    "\7\3\1\u0275\17\3\2\0\3\3\1\0\5\3\22\0"+
    "\14\3\1\u0276\12\3\2\0\3\3\1\0\5\3\22\0"+
    "\1\314\26\3\2\0\3\3\1\0\5\3\22\0\4\3"+
    "\1\u0210\22\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0277\12\3\2\0\3\3\1\0\3\3\1\u0278\1\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0279\12\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\u027a\24\3\2\0\3\3\1\0\5\3\22\0\7\3"+
    "\1\u027b\17\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u027c\12\3\2\0\3\3\1\0\3\3\1\u027d\1\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\22\3"+
    "\1\u027e\4\3\2\0\3\3\1\0\2\3\1\u027f\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\1\3"+
    "\1\u0196\25\3\2\0\3\3\1\0\5\3\22\0\22\3"+
    "\1\u0280\4\3\2\0\3\3\1\0\5\3\22\0\16\3"+
    "\1\u0281\10\3\2\0\3\3\1\0\3\3\1\u0115\1\3"+
    "\22\0\27\3\2\0\3\3\1\0\2\3\1\u0195\2\3"+
    "\22\0\27\3\2\0\3\3\1\0\5\3\22\0\5\3"+
    "\1\u012e\21\3\2\0\3\3\1\0\5\3\22\0\2\3"+
    "\1\u0282\24\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u0190\11\3\2\0\3\3\1\0\5\3\22\0\14\3"+
    "\1\u0283\12\3\2\0\3\3\1\0\5\3\22\0\6\3"+
    "\1\u0284\20\3\2\0\3\3\1\0\5\3\22\0\15\3"+
    "\1\u01d5\11\3\2\0\3\3\1\0\4\3\1\u0285\22\0"+
    "\27\3\2\0\3\3\1\0\5\3\22\0\12\3\1\u0286"+
    "\14\3\2\0\3\3\1\0\5\3\22\0\1\u0287\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u0288\21\3"+
    "\2\0\3\3\1\0\5\3\22\0\5\3\1\u0289\21\3"+
    "\2\0\3\3\1\0\5\3\22\0\1\u028a\26\3\2\0"+
    "\3\3\1\0\5\3\22\0\14\3\1\u028b\12\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u028c\11\3\2\0"+
    "\3\3\1\0\5\3\22\0\4\3\1\u028d\22\3\2\0"+
    "\3\3\1\0\5\3\22\0\2\3\1\u028e\24\3\2\0"+
    "\3\3\1\0\5\3\22\0\16\3\1\u028f\10\3\2\0"+
    "\3\3\1\0\5\3\22\0\1\3\1\u0290\2\3\1\u026d"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\2\3\1\u0291"+
    "\24\3\2\0\3\3\1\0\5\3\22\0\4\3\1\u0292"+
    "\22\3\2\0\3\3\1\0\5\3\22\0\1\u0293\26\3"+
    "\2\0\3\3\1\0\5\3\22\0\14\3\1\u0294\12\3"+
    "\2\0\3\3\1\0\4\3\1\u0295\22\0\27\3\2\0"+
    "\3\3\1\0\5\3\22\0\15\3\1\u028e\11\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33384];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\12\1\1\11\52\1\1\0\1\1\1\0"+
    "\1\1\1\0\200\1\1\0\1\1\1\11\237\1\1\0"+
    "\156\1\1\0\107\1\1\0\47\1\1\0\33\1\1\11"+
    "\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int linea;
public int PrimeraColumna;
public int UltimaColumna;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 184) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return ERROR;
            } 
            // fall through
          case 13: break;
          case 2: 
            { lexeme=yytext(); linea=yyline; PrimeraColumna=yycolumn +1 ; UltimaColumna=yycolumn+yylength(); return Identificador;
            } 
            // fall through
          case 14: break;
          case 3: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Int;
            } 
            // fall through
          case 15: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 16: break;
          case 5: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Bit;
            } 
            // fall through
          case 17: break;
          case 6: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Simbolo;
            } 
            // fall through
          case 18: break;
          case 7: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return StringError;
            } 
            // fall through
          case 19: break;
          case 8: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Float;
            } 
            // fall through
          case 20: break;
          case 9: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn +1; UltimaColumna=yycolumn+yylength(); return Palabra_Reservada;
            } 
            // fall through
          case 21: break;
          case 10: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return ComentarioSimple;
            } 
            // fall through
          case 22: break;
          case 11: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return FloatError;
            } 
            // fall through
          case 23: break;
          case 12: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return String;
            } 
            // fall through
          case 24: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
