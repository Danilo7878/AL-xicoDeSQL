/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;
import static AnalizadorLexico.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/danil/Desktop/Compiladores/AL-xicoDeSQL/AL_SQL/src/AnalizadorLexico/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\5\1\61\1\61\1\5\22\0\1\4\1\20\1\0"+
    "\1\31\1\0\1\16\1\21\1\0\1\25\1\26\1\16\1\15\1\4"+
    "\1\13\1\14\1\16\2\7\10\3\1\0\1\16\1\20\1\17\1\20"+
    "\1\0\1\16\1\32\1\45\1\42\1\33\1\34\1\43\1\51\1\44"+
    "\1\46\1\57\1\53\1\12\1\54\1\10\1\41\1\40\1\60\1\37"+
    "\1\47\1\36\1\11\1\56\1\55\1\35\1\50\1\52\1\23\1\0"+
    "\1\24\1\0\1\2\1\0\4\1\1\6\25\1\1\27\1\22\1\30"+
    "\7\0\1\61\u1fa2\0\1\61\1\61\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\3\2\5\6"+
    "\2\1\4\6\25\2\1\7\3\2\1\10\10\2\1\0"+
    "\1\11\1\0\1\12\4\2\1\10\3\2\1\10\20\2"+
    "\1\10\17\2\1\10\1\2\1\10\2\2\1\10\26\2"+
    "\1\10\1\2\1\10\21\2\1\10\17\2\1\12\14\2"+
    "\1\10\7\2\1\12\1\2\1\10\7\2\1\10\7\2"+
    "\1\10\50\2\1\10\26\2\1\10\13\2\1\10\1\2"+
    "\1\10\11\2\1\10\12\2\1\10\4\2\1\10\7\2"+
    "\1\7\1\12\1\10\12\2\1\12\14\2\1\10\3\2"+
    "\1\0\11\2\1\10\3\2\1\10\3\2\1\10\17\2"+
    "\1\10\2\2\1\10\2\2\1\10\17\2\1\10\42\2"+
    "\2\10\22\2\1\0\1\2\1\10\46\2\1\10\30\2"+
    "\1\10\5\2\1\0\1\10\46\2\1\0\11\2\1\10"+
    "\1\2\1\10\11\2\1\10\5\2\1\10\6\2\1\10"+
    "\3\2\1\10\34\2\1\10\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\62\0\144\0\226\0\310\0\226\0\372\0\u012c"+
    "\0\u015e\0\u0190\0\u01c2\0\u01f4\0\62\0\u0226\0\u0258\0\u028a"+
    "\0\u02bc\0\u02ee\0\u0320\0\u0352\0\u0384\0\u03b6\0\u03e8\0\u041a"+
    "\0\u044c\0\u047e\0\u04b0\0\u04e2\0\u0514\0\u0546\0\u0578\0\u05aa"+
    "\0\u05dc\0\u060e\0\u0640\0\u0672\0\u06a4\0\u06d6\0\u0708\0\u073a"+
    "\0\u076c\0\u079e\0\u07d0\0\u0802\0\u0834\0\u0866\0\u0898\0\u08ca"+
    "\0\u08fc\0\u092e\0\u0960\0\u0992\0\u09c4\0\u09f6\0\u0a28\0\u0a5a"+
    "\0\u01c2\0\u0a8c\0\u0abe\0\u0af0\0\u0b22\0\u0b54\0\144\0\u0b86"+
    "\0\u0bb8\0\u0bea\0\u0c1c\0\u0c4e\0\u0c80\0\u0cb2\0\u0ce4\0\u0d16"+
    "\0\u0d48\0\u0d7a\0\u0dac\0\u0dde\0\u0e10\0\u0e42\0\u0e74\0\u0ea6"+
    "\0\u0ed8\0\u0f0a\0\u0f3c\0\u0f6e\0\u0fa0\0\u0fd2\0\u1004\0\u1036"+
    "\0\u1068\0\u109a\0\u10cc\0\u10fe\0\u1130\0\u1162\0\u1194\0\u11c6"+
    "\0\u11f8\0\u122a\0\u125c\0\u128e\0\u12c0\0\u12f2\0\u1324\0\u1356"+
    "\0\u1388\0\u13ba\0\u13ec\0\u141e\0\u1450\0\u1482\0\u14b4\0\u14e6"+
    "\0\u1518\0\u154a\0\u157c\0\u15ae\0\u15e0\0\u1612\0\u1644\0\u1676"+
    "\0\u16a8\0\u16da\0\u170c\0\u173e\0\u1770\0\u17a2\0\u17d4\0\u1806"+
    "\0\u1838\0\u186a\0\u189c\0\u18ce\0\u1900\0\u1932\0\u1964\0\u1996"+
    "\0\u19c8\0\u19fa\0\u1a2c\0\u1a5e\0\u1a90\0\u1ac2\0\u1af4\0\u1b26"+
    "\0\u1b58\0\u1b8a\0\u1bbc\0\u1bee\0\u1c20\0\u1c52\0\u1c84\0\u1cb6"+
    "\0\u1ce8\0\u1d1a\0\u1d4c\0\u1d7e\0\u1db0\0\u1de2\0\u1e14\0\u1e46"+
    "\0\u1e78\0\u1eaa\0\u1edc\0\u1f0e\0\u1f40\0\u1f72\0\u1fa4\0\u1fd6"+
    "\0\u2008\0\u203a\0\u206c\0\u209e\0\u20d0\0\u2102\0\u2134\0\u2166"+
    "\0\u2198\0\u21ca\0\u21fc\0\u222e\0\u2260\0\u2292\0\u22c4\0\u22f6"+
    "\0\u2328\0\u235a\0\u238c\0\u23be\0\u23f0\0\u2422\0\u0f6e\0\u2454"+
    "\0\u2486\0\u24b8\0\u24ea\0\u251c\0\u254e\0\u2580\0\u25b2\0\u25e4"+
    "\0\u2616\0\u2648\0\u267a\0\u26ac\0\u26de\0\u2710\0\u2742\0\u2774"+
    "\0\u27a6\0\u27d8\0\u280a\0\u283c\0\u286e\0\u28a0\0\u28d2\0\u2904"+
    "\0\u2936\0\u2968\0\u299a\0\u29cc\0\u29fe\0\u2a30\0\u2a62\0\u2a94"+
    "\0\u2ac6\0\u2af8\0\u2b2a\0\u2b5c\0\u2b8e\0\u2bc0\0\u2bf2\0\u2c24"+
    "\0\u2c56\0\u2c88\0\u2cba\0\u2cec\0\u2d1e\0\u2d50\0\u2d82\0\u2db4"+
    "\0\u2de6\0\u2e18\0\u2e4a\0\u2e7c\0\u2eae\0\u2ee0\0\u2f12\0\u2f44"+
    "\0\u2f76\0\u2fa8\0\u2fda\0\u300c\0\u303e\0\u3070\0\u30a2\0\u30d4"+
    "\0\u3106\0\u3138\0\u316a\0\u319c\0\u31ce\0\u3200\0\u3232\0\u3264"+
    "\0\u3296\0\u32c8\0\u32fa\0\u332c\0\u335e\0\u3390\0\u2198\0\u33c2"+
    "\0\u33f4\0\u3426\0\u3458\0\u348a\0\u34bc\0\u34ee\0\u3520\0\u3552"+
    "\0\u3584\0\u35b6\0\u35e8\0\u361a\0\u364c\0\u367e\0\u36b0\0\u36e2"+
    "\0\u3714\0\u3746\0\u3778\0\u37aa\0\u37dc\0\u380e\0\u3840\0\u3872"+
    "\0\u38a4\0\u38d6\0\u3908\0\u393a\0\u396c\0\u399e\0\u39d0\0\u3a02"+
    "\0\u3a34\0\u3a66\0\u3a98\0\u3aca\0\u3afc\0\u3b2e\0\u3b60\0\u3b92"+
    "\0\u3bc4\0\u3bf6\0\u3c28\0\u3c28\0\u3c5a\0\u3c8c\0\u3cbe\0\u3cf0"+
    "\0\u3d22\0\u3d54\0\u3d86\0\u3db8\0\u3dea\0\u3e1c\0\u3e4e\0\u3e80"+
    "\0\u3eb2\0\u3ee4\0\u3f16\0\u3f48\0\u3f7a\0\u3fac\0\u3fde\0\u4010"+
    "\0\u4042\0\u4074\0\u40a6\0\u40d8\0\u410a\0\u413c\0\u416e\0\u41a0"+
    "\0\u41d2\0\u4204\0\u4236\0\u4268\0\u429a\0\u42cc\0\u42fe\0\u4330"+
    "\0\u4362\0\u4394\0\u43c6\0\u43f8\0\u442a\0\u445c\0\u448e\0\u44c0"+
    "\0\u44f2\0\u4524\0\u4556\0\u4588\0\u45ba\0\u45ec\0\u461e\0\u4650"+
    "\0\u4682\0\u46b4\0\u46e6\0\u4718\0\u474a\0\u477c\0\u47ae\0\u47e0"+
    "\0\u4812\0\u4844\0\u4876\0\u48a8\0\u48da\0\u490c\0\u493e\0\u4970"+
    "\0\u49a2\0\u49d4\0\u4a06\0\u4a38\0\u4a6a\0\u4a9c\0\u4ace\0\u4b00"+
    "\0\u4b32\0\u4b64\0\u4b96\0\u4bc8\0\u4bfa\0\u4c2c\0\u3a98\0\u4c5e"+
    "\0\u4c90\0\u4cc2\0\u4cf4\0\u4d26\0\u4d58\0\u4d8a\0\u4dbc\0\u4dee"+
    "\0\u4e20\0\u4e52\0\u4e84\0\u4eb6\0\u4ee8\0\u4f1a\0\u4f4c\0\u4f7e"+
    "\0\u4fb0\0\u4fe2\0\u5014\0\u5046\0\u5078\0\u50aa\0\u50dc\0\u510e"+
    "\0\u5140\0\u5172\0\u51a4\0\u51d6\0\u5208\0\u523a\0\u526c\0\u529e"+
    "\0\u52d0\0\u5302\0\u5334\0\u5366\0\u5398\0\u53ca\0\u53fc\0\u542e"+
    "\0\u5460\0\u5492\0\u54c4\0\u54f6\0\u5528\0\u555a\0\u238c\0\u558c"+
    "\0\u55be\0\u55f0\0\u5622\0\u5654\0\u5686\0\u56b8\0\u56ea\0\u571c"+
    "\0\u574e\0\u5780\0\u57b2\0\u57e4\0\u5816\0\u5848\0\u587a\0\u58ac"+
    "\0\u58de\0\u5910\0\u5942\0\u5974\0\u59a6\0\u59d8\0\u5a0a\0\u5a3c"+
    "\0\u5a6e\0\u5aa0\0\u5ad2\0\u5b04\0\u5b36\0\u5b68\0\u5b9a\0\u5bcc"+
    "\0\u5bfe\0\u5c30\0\u3520\0\u5c62\0\u5c94\0\u5cc6\0\u5cf8\0\u5d2a"+
    "\0\u5d5c\0\u5d8e\0\u5dc0\0\u5df2\0\u5e24\0\u5e56\0\u5e88\0\u5eba"+
    "\0\u5eec\0\u5f1e\0\u5f50\0\u5f82\0\u5fb4\0\u5fe6\0\u6018\0\u604a"+
    "\0\u607c\0\u60ae\0\u60e0\0\u6112\0\u6144\0\u6176\0\u61a8\0\u61da"+
    "\0\u620c\0\u623e\0\u6270\0\u62a2\0\u62d4\0\u6306\0\u6338\0\u636a"+
    "\0\u639c\0\u3d22\0\u63ce\0\u6400\0\u6432\0\u6464\0\u6496\0\u64c8"+
    "\0\u23be\0\u64fa\0\u652c\0\u655e\0\u6590\0\u65c2\0\u65f4\0\u6626"+
    "\0\u6658\0\u668a\0\u66bc\0\u66ee\0\u6720\0\u6752\0\u6784\0\u67b6"+
    "\0\u67e8\0\u681a\0\u684c\0\u687e\0\u68b0\0\u68e2\0\u6914\0\u6946"+
    "\0\u6978\0\u69aa\0\u69dc\0\u6a0e\0\u6a40\0\u6a72\0\u6aa4\0\u6ad6"+
    "\0\u6b08\0\u6b3a\0\u6b6c\0\u6b9e\0\u6bd0\0\u6c02\0\u6c34\0\u6c66"+
    "\0\u6c98\0\u6cca\0\u6cfc\0\u6d2e\0\u6d60\0\u6d92\0\u6dc4\0\u6df6"+
    "\0\u6e28\0\u6e5a\0\u6e8c\0\u2292\0\u6ebe\0\u6ef0\0\u6f22\0\u6f54"+
    "\0\u6f86\0\u6fb8\0\u128e\0\u6fea\0\u701c\0\u6b6c\0\u704e\0\u7080"+
    "\0\u3778\0\u70b2\0\u70e4\0\62\0\u7116\0\u7148\0\u717a\0\u71ac"+
    "\0\u71de\0\u7210\0\u7242\0\u7274\0\u72a6\0\u72d8\0\u730a\0\u733c"+
    "\0\u736e\0\u73a0\0\u73d2\0\u7404\0\u7436\0\u7468\0\u749a\0\u74cc"+
    "\0\u74fe\0\u7530\0\u7562\0\u7594\0\u75c6\0\u75f8\0\u762a\0\u765c"+
    "\0\u768e\0\u76c0\0\u76f2\0\u7724\0\u7756\0\u7788\0\u77ba\0\u77ec"+
    "\0\u781e\0\u7850\0\u7882\0\u78b4\0\u78e6\0\u7918\0\u794a\0\u797c"+
    "\0\u79ae\0\u79e0\0\u7a12\0\u7a44\0\u7a76\0\u7aa8\0\u7ada\0\u7242"+
    "\0\u7b0c\0\u7b3e\0\u7b70\0\u7ba2\0\u7bd4\0\u7c06\0\u7c38";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\2\1\4\2\5\1\3\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\2\16\1\17"+
    "\1\20\1\21\1\15\1\22\1\15\1\23\1\15\1\24"+
    "\1\25\1\26\1\27\1\3\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\51\1\3\64\0"+
    "\3\3\2\0\5\3\17\0\27\3\4\0\1\4\3\0"+
    "\1\4\4\0\1\52\51\0\2\5\55\0\3\3\2\0"+
    "\3\3\1\53\1\3\17\0\1\54\1\3\1\55\4\3"+
    "\1\56\1\57\16\3\2\0\3\3\2\0\2\3\1\60"+
    "\2\3\17\0\6\3\1\61\6\3\1\62\11\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\63\1\3\1\64\4\3"+
    "\1\65\4\3\1\66\12\3\4\0\1\67\3\0\1\67"+
    "\3\0\1\70\1\71\50\0\1\72\3\0\1\72\55\0"+
    "\1\67\3\0\1\67\4\0\1\71\64\0\1\15\63\0"+
    "\1\15\62\0\1\15\63\0\1\15\63\0\1\15\63\0"+
    "\1\15\62\0\1\15\31\0\3\3\2\0\2\3\1\73"+
    "\1\74\1\75\17\0\1\3\1\76\2\3\1\77\1\100"+
    "\2\3\1\101\2\3\1\102\1\3\1\103\6\3\1\104"+
    "\2\3\2\0\3\3\2\0\3\3\1\105\1\3\17\0"+
    "\1\106\1\3\1\107\2\3\1\110\1\3\1\111\3\3"+
    "\1\112\1\113\12\3\2\0\3\3\2\0\2\3\1\114"+
    "\1\3\1\115\17\0\3\3\1\116\1\3\1\117\7\3"+
    "\1\120\11\3\2\0\3\3\2\0\5\3\17\0\1\121"+
    "\1\3\1\122\2\3\1\123\1\3\1\124\2\3\1\125"+
    "\1\3\1\126\1\127\11\3\2\0\3\3\2\0\3\3"+
    "\1\130\1\3\17\0\1\131\1\3\1\132\4\3\1\133"+
    "\4\3\1\134\12\3\2\0\3\3\2\0\3\3\1\135"+
    "\1\136\17\0\1\137\1\3\1\140\2\3\1\141\1\3"+
    "\1\142\4\3\1\143\12\3\2\0\3\3\2\0\2\3"+
    "\1\144\1\145\1\3\17\0\5\3\1\146\1\147\1\3"+
    "\1\150\1\151\12\3\1\152\2\3\2\0\3\3\2\0"+
    "\3\3\1\153\1\154\17\0\1\155\4\3\1\156\1\3"+
    "\1\157\2\3\1\160\14\3\2\0\3\3\2\0\3\3"+
    "\1\161\1\162\17\0\1\163\1\3\1\164\2\3\1\165"+
    "\1\3\1\166\4\3\1\167\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\170\6\3\1\171\17\3\2\0\3\3"+
    "\2\0\3\3\1\172\1\3\17\0\1\173\1\3\1\174"+
    "\2\3\1\175\1\3\1\176\4\3\1\177\1\3\1\77"+
    "\10\3\2\0\3\3\2\0\2\3\1\200\2\3\17\0"+
    "\1\3\1\201\7\3\1\77\3\3\1\202\4\3\1\203"+
    "\4\3\2\0\3\3\2\0\3\3\1\204\1\3\17\0"+
    "\1\205\1\3\1\206\1\3\1\207\1\3\1\210\1\211"+
    "\1\212\1\3\1\213\1\3\1\214\1\3\1\215\3\3"+
    "\1\216\3\3\1\217\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\220\24\3\2\0\3\3\2\0\4\3\1\221"+
    "\17\0\2\3\1\222\2\3\1\223\1\3\1\224\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\225\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\226\11\3"+
    "\1\227\12\3\2\0\3\3\2\0\5\3\17\0\1\230"+
    "\1\3\1\231\4\3\1\232\4\3\1\233\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\234\4\3\1\235\1\3"+
    "\1\236\2\3\1\237\1\3\1\240\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\241\13\3\1\242\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\243\17\3\4\0"+
    "\1\52\2\0\1\244\1\52\24\0\1\244\26\0\3\3"+
    "\2\0\4\3\1\245\17\0\22\3\1\246\4\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\247\15\3\1\250"+
    "\4\3\2\0\3\3\2\0\5\3\17\0\3\3\1\222"+
    "\23\3\2\0\3\3\2\0\2\3\1\251\2\3\17\0"+
    "\4\3\1\77\3\3\1\252\16\3\2\0\3\3\2\0"+
    "\5\3\17\0\12\3\1\220\14\3\2\0\3\3\2\0"+
    "\5\3\17\0\6\3\1\253\5\3\1\254\4\3\1\255"+
    "\5\3\2\0\3\3\2\0\5\3\17\0\1\3\1\256"+
    "\4\3\1\257\20\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\260\1\3\1\261\11\3\1\262\12\3\2\0\3\3"+
    "\2\0\2\3\1\263\2\3\17\0\15\3\1\222\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\264\10\3\1\222"+
    "\12\3\1\265\2\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\266\7\3\1\267\12\3\1\257\3\3\2\0\3\3"+
    "\2\0\2\3\1\270\2\3\17\0\21\3\1\100\5\3"+
    "\4\0\1\67\3\0\1\67\4\0\1\52\45\0\5\70"+
    "\1\0\54\70\3\0\1\72\2\0\1\271\1\72\24\0"+
    "\1\271\26\0\3\3\2\0\5\3\17\0\1\3\1\77"+
    "\14\3\1\77\10\3\2\0\3\3\2\0\5\3\17\0"+
    "\4\3\1\272\22\3\2\0\3\3\2\0\4\3\1\273"+
    "\17\0\4\3\1\257\22\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\77\25\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\77\24\3\2\0\3\3\2\0\5\3\17\0"+
    "\4\3\1\274\22\3\2\0\3\3\2\0\5\3\17\0"+
    "\15\3\1\275\11\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\77\4\3\1\276\11\3\2\0\3\3\2\0"+
    "\5\3\17\0\17\3\1\77\7\3\2\0\3\3\2\0"+
    "\5\3\17\0\22\3\1\277\4\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\300\11\3\1\77\10\3\2\0"+
    "\3\3\2\0\2\3\1\226\1\3\1\301\17\0\1\302"+
    "\7\3\1\303\1\304\3\3\1\305\11\3\2\0\3\3"+
    "\2\0\5\3\17\0\7\3\1\277\17\3\2\0\3\3"+
    "\2\0\3\3\1\306\1\3\17\0\22\3\1\307\4\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\310\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\311\14\3\1\312"+
    "\11\3\2\0\3\3\2\0\5\3\17\0\1\3\1\313"+
    "\25\3\2\0\3\3\2\0\5\3\17\0\15\3\1\100"+
    "\11\3\2\0\3\3\2\0\5\3\17\0\2\3\1\314"+
    "\1\3\1\315\3\3\1\316\3\3\1\317\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\5\3\1\320\21\3\2\0"+
    "\3\3\2\0\5\3\17\0\10\3\1\321\16\3\2\0"+
    "\3\3\2\0\5\3\17\0\13\3\1\322\13\3\2\0"+
    "\3\3\2\0\5\3\17\0\3\3\1\323\16\3\1\324"+
    "\4\3\2\0\3\3\2\0\3\3\1\325\1\3\17\0"+
    "\1\326\13\3\1\327\1\3\1\330\10\3\2\0\3\3"+
    "\2\0\5\3\17\0\6\3\1\77\20\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\331\24\3\2\0\3\3"+
    "\2\0\5\3\17\0\22\3\1\332\4\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\333\24\3\2\0\3\3"+
    "\2\0\4\3\1\100\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\334\12\3\2\0\3\3\2\0"+
    "\4\3\1\335\17\0\1\336\3\3\1\337\1\3\1\340"+
    "\1\3\1\341\1\342\3\3\1\343\6\3\1\344\2\3"+
    "\2\0\3\3\2\0\4\3\1\345\17\0\23\3\1\346"+
    "\3\3\2\0\3\3\2\0\5\3\17\0\17\3\1\347"+
    "\7\3\2\0\3\3\2\0\5\3\17\0\13\3\1\350"+
    "\13\3\2\0\3\3\2\0\5\3\17\0\1\331\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\3\1\77\3\3"+
    "\1\351\7\3\1\352\11\3\2\0\3\3\2\0\5\3"+
    "\17\0\5\3\1\353\21\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\354\4\3\1\355\4\3\1\356\12\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\357\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\24\3\1\360\2\3"+
    "\2\0\3\3\2\0\4\3\1\226\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\361\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\3\1\257\25\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\362\1\3\1\274"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\4\3\1\363"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\11\3\1\364"+
    "\15\3\2\0\3\3\2\0\5\3\17\0\2\3\1\365"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\5\3\1\366"+
    "\21\3\2\0\3\3\2\0\3\3\1\367\1\3\17\0"+
    "\7\3\1\115\17\3\2\0\3\3\2\0\5\3\17\0"+
    "\4\3\1\370\10\3\1\371\11\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\372\4\3\1\373\17\3\2\0"+
    "\3\3\2\0\2\3\1\374\1\375\1\376\17\0\1\377"+
    "\4\3\1\u0100\14\3\1\u0101\4\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\u0102\1\3\1\u0103\24\3\2\0\3\3"+
    "\2\0\2\3\1\u0104\1\3\1\u0105\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u0106\17\3\2\0"+
    "\3\3\2\0\4\3\1\115\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u0107\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u0108\4\3\1\u0109\17\3"+
    "\2\0\3\3\2\0\3\3\1\u010a\1\3\17\0\5\3"+
    "\1\u010b\21\3\2\0\3\3\2\0\4\3\1\u010c\17\0"+
    "\5\3\1\u010d\21\3\2\0\3\3\2\0\5\3\17\0"+
    "\24\3\1\u010e\2\3\2\0\3\3\2\0\3\3\1\u010f"+
    "\1\u0110\17\0\27\3\2\0\3\3\2\0\4\3\1\u0111"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\10\3"+
    "\1\u0112\16\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u0113\12\3\1\243\7\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u0114\4\3\1\u0115\17\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u0116\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u0117\22\3\2\0\3\3"+
    "\2\0\2\3\1\257\2\3\17\0\1\3\1\u0118\2\3"+
    "\1\u0119\1\3\1\u011a\1\3\1\u011b\3\3\1\u011c\1\u011d"+
    "\11\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u011e"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\7\3\1\u011f"+
    "\17\3\2\0\3\3\2\0\5\3\17\0\22\3\1\u0120"+
    "\4\3\2\0\3\3\2\0\5\3\17\0\13\3\1\u0121"+
    "\6\3\1\77\4\3\2\0\3\3\2\0\5\3\17\0"+
    "\24\3\1\100\2\3\2\0\3\3\2\0\4\3\1\u0122"+
    "\17\0\4\3\1\u0123\3\3\1\u0124\4\3\1\u0125\4\3"+
    "\1\u0126\4\3\2\0\3\3\2\0\5\3\17\0\1\u0127"+
    "\26\3\2\0\3\3\2\0\5\3\17\0\1\u0128\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\22\3\1\100\4\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0129\4\3"+
    "\1\u012a\14\3\2\0\3\3\2\0\3\3\1\u012b\1\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\20\3"+
    "\1\100\6\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u012c\11\3\2\0\3\3\2\0\5\3\17\0\1\u012d"+
    "\26\3\2\0\3\3\2\0\4\3\1\u012e\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u010f\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u012f\17\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\77\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\375\6\3\1\u0130\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u0131\22\3"+
    "\2\0\3\3\2\0\2\3\1\100\2\3\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\16\3\1\77\10\3"+
    "\2\0\3\3\2\0\4\3\1\u0105\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\3\3\1\77\1\u0107\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\260\21\3"+
    "\2\0\3\3\2\0\2\3\1\176\2\3\17\0\1\3"+
    "\1\u0132\25\3\2\0\3\3\2\0\2\3\1\u0133\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0134\12\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0135\12\3\2\0\3\3\2\0\5\3\17\0\5\3"+
    "\1\u0111\21\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\u0136\11\3\1\130\12\3\2\0\3\3\2\0\5\3"+
    "\17\0\4\3\1\u0137\22\3\2\0\3\3\2\0\4\3"+
    "\1\u0138\17\0\5\3\1\u0139\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u013a\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\331\12\3\4\0\1\u013b\3\0"+
    "\1\u013b\3\0\1\u013c\1\0\1\u013c\45\0\3\3\2\0"+
    "\4\3\1\u013d\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u013e\24\3\2\0\3\3\2\0\3\3"+
    "\1\u013f\1\3\17\0\14\3\1\u0140\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u0141\24\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\77\5\3\1\u0142\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\12\3\1\u0143\14\3"+
    "\2\0\3\3\2\0\5\3\17\0\14\3\1\143\12\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\331\16\3"+
    "\1\u0144\2\0\3\3\2\0\2\3\1\u0145\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\1\u0135\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u010f\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\17\3\1\100\7\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\77\21\3"+
    "\2\0\3\3\2\0\2\3\1\104\2\3\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\17\3\1\u0146\7\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\3\1\u010e\25\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u0105\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\3\1\77\25\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u0105\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u0147\24\3\4\0"+
    "\1\u0148\3\0\1\u0148\3\0\1\u0148\1\0\1\u0148\45\0"+
    "\3\3\2\0\5\3\17\0\12\3\1\u0149\14\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u014a\17\3\2\0"+
    "\3\3\2\0\5\3\17\0\14\3\1\u014b\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u014c\17\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u014d\24\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\u014e\1\3\1\77\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u014f\24\3"+
    "\2\0\3\3\2\0\4\3\1\u0150\17\0\27\3\2\0"+
    "\3\3\2\0\4\3\1\u0151\17\0\14\3\1\u0152\12\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u0153\1\3\1\u0154"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\10\3\1\u0155"+
    "\16\3\2\0\3\3\2\0\5\3\17\0\13\3\1\130"+
    "\13\3\2\0\3\3\2\0\5\3\17\0\1\243\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\77\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\17\3\1\u0156\7\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u0157\3\3"+
    "\1\u0158\10\3\1\77\5\3\2\0\3\3\2\0\5\3"+
    "\1\u0159\16\0\27\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\u0133\16\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\u015a\2\3\1\u015b\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u015c\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\77\10\3\1\u015d\11\3\2\0"+
    "\3\3\2\0\4\3\1\u015e\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\u015f\26\3\2\0\3\3\2\0"+
    "\4\3\1\u0160\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\4\3\1\u0161\22\3\2\0\3\3\2\0\5\3"+
    "\17\0\6\3\1\u0162\20\3\2\0\3\3\2\0\2\3"+
    "\1\u014a\2\3\17\0\2\3\1\77\24\3\2\0\3\3"+
    "\2\0\2\3\1\u0163\2\3\17\0\14\3\1\u0164\12\3"+
    "\2\0\3\3\2\0\5\3\17\0\17\3\1\u0165\2\3"+
    "\1\77\4\3\2\0\1\3\1\u0166\1\3\2\0\5\3"+
    "\17\0\27\3\2\0\3\3\2\0\2\3\1\77\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\u0167\24\3\2\0\3\3\2\0\5\3\17\0\26\3"+
    "\1\u0168\2\0\3\3\2\0\5\3\17\0\15\3\1\u0169"+
    "\11\3\2\0\3\3\2\0\5\3\17\0\1\u016a\26\3"+
    "\2\0\3\3\2\0\4\3\1\77\17\0\1\3\1\u016b"+
    "\25\3\2\0\3\3\2\0\3\3\1\u016c\1\3\17\0"+
    "\27\3\2\0\3\3\2\0\4\3\1\u016d\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\u016e\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u016f\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u0170\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u0171\4\3"+
    "\1\u0172\17\3\2\0\3\3\2\0\4\3\1\u0173\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\10\3\1\u0174"+
    "\4\3\1\77\1\3\1\u0175\7\3\2\0\3\3\2\0"+
    "\5\3\17\0\12\3\1\222\14\3\2\0\3\3\2\0"+
    "\4\3\1\u0176\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\4\3\1\u0177\22\3\2\0\3\3\2\0\5\3"+
    "\17\0\10\3\1\267\16\3\2\0\3\3\2\0\5\3"+
    "\17\0\10\3\1\u0178\16\3\2\0\3\3\2\0\5\3"+
    "\17\0\6\3\1\u0151\1\3\1\u0179\4\3\1\u017a\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\u017b\16\3"+
    "\2\0\3\3\2\0\2\3\1\222\2\3\17\0\7\3"+
    "\1\u010f\12\3\1\u017c\1\3\1\u017d\2\3\2\0\3\3"+
    "\2\0\5\3\17\0\14\3\1\101\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\7\3\1\222\17\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u010f\3\3\1\u011a\20\3"+
    "\2\0\3\3\2\0\2\3\1\u017e\2\3\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u017f\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\u0180\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0181\21\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0182\7\3"+
    "\1\u0183\11\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u0184\11\3\2\0\3\3\2\0\5\3\17\0\1\u0185"+
    "\26\3\2\0\3\3\2\0\5\3\17\0\2\3\1\77"+
    "\1\3\1\77\3\3\1\u0186\16\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\u014f\26\3\2\0\3\3\2\0\5\3"+
    "\17\0\15\3\1\u0141\11\3\2\0\3\3\2\0\2\3"+
    "\1\u0187\2\3\17\0\4\3\1\u0188\10\3\1\u0189\6\3"+
    "\1\u018a\2\3\2\0\3\3\2\0\2\3\1\222\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\3\3\1\u018b\1\u018c"+
    "\17\0\27\3\2\0\3\3\2\0\4\3\1\u018d\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\5\3\1\u018e"+
    "\21\3\2\0\3\3\2\0\5\3\17\0\6\3\1\u018f"+
    "\13\3\1\u0190\4\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\u0191\21\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\u0192\16\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\101\16\3\2\0\3\3\2\0\4\3\1\77"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\1\222"+
    "\26\3\2\0\3\3\2\0\5\3\17\0\10\3\1\u0116"+
    "\16\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u0193"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\22\3\1\77"+
    "\4\3\2\0\3\3\2\0\2\3\1\266\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u0194"+
    "\1\3\1\u0195\22\3\2\0\3\3\2\0\4\3\1\u0196"+
    "\17\0\2\3\1\77\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\15\3\1\222\11\3\2\0\3\3\2\0\5\3"+
    "\17\0\14\3\1\262\12\3\2\0\3\3\2\0\5\3"+
    "\17\0\1\3\1\u0197\25\3\2\0\3\3\2\0\5\3"+
    "\17\0\21\3\1\77\5\3\2\0\3\3\2\0\5\3"+
    "\17\0\21\3\1\u0130\5\3\2\0\3\3\2\0\5\3"+
    "\17\0\23\3\1\u0198\3\3\2\0\3\3\2\0\5\3"+
    "\17\0\1\u0111\26\3\2\0\3\3\2\0\5\3\17\0"+
    "\23\3\1\115\3\3\2\0\3\3\2\0\5\3\17\0"+
    "\12\3\1\77\14\3\2\0\1\3\1\u0199\1\3\2\0"+
    "\5\3\17\0\27\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\u019a\11\3\1\u019b\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u019c\4\3\1\77\17\3\2\0"+
    "\3\3\2\0\3\3\1\222\1\3\17\0\27\3\2\0"+
    "\3\3\2\0\4\3\1\u019d\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u019e\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u019f\24\3\2\0\3\3"+
    "\2\0\2\3\1\u01a0\2\3\17\0\27\3\2\0\3\3"+
    "\2\0\4\3\1\u01a1\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u01a2\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\15\3\1\u01a3\11\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u01a4\24\3\2\0\3\3\2\0"+
    "\3\3\1\u01a5\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\3\3\1\u01a6\1\3\17\0\4\3\1\274\2\3\1\u010a"+
    "\17\3\2\0\3\3\2\0\5\3\17\0\15\3\1\u01a7"+
    "\11\3\2\0\3\3\2\0\5\3\17\0\1\u01a8\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u01a9\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\100\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\227\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u01aa\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u01ab\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u01ac\22\3"+
    "\2\0\3\3\2\0\4\3\1\u01ad\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u01ae\5\3\1\u01af"+
    "\4\3\1\u01b0\5\3\1\u01b1\3\3\2\0\3\3\2\0"+
    "\5\3\17\0\13\3\1\267\13\3\2\0\3\3\2\0"+
    "\3\3\1\277\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\7\3\1\77\17\3\2\0\3\3\2\0"+
    "\3\3\1\130\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\3\3\1\u014f\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\u01b2\22\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\u01b3\22\3\2\0\3\3\2\0"+
    "\2\3\1\u01b4\2\3\17\0\5\3\1\100\21\3\2\0"+
    "\3\3\2\0\5\3\17\0\12\3\1\u01b5\14\3\2\0"+
    "\3\3\2\0\3\3\1\u01b6\1\3\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\10\3\1\57\5\3\1\u010e"+
    "\10\3\2\0\3\3\2\0\5\3\17\0\23\3\1\77"+
    "\3\3\4\0\1\u013b\3\0\1\u013b\53\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\u01b7\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\u0176\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\267\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\7\3\1\u01b8\17\3\2\0\3\3\2\0"+
    "\5\3\17\0\15\3\1\77\11\3\2\0\3\3\2\0"+
    "\4\3\1\u01b9\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u01ba\24\3\2\0\3\3\2\0\3\3"+
    "\1\100\1\3\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\7\3\1\u01bb\17\3\2\0\3\3\2\0\3\3"+
    "\1\u01bc\1\3\17\0\27\3\2\0\3\3\2\0\2\3"+
    "\1\u0131\2\3\17\0\27\3\4\0\1\u0148\3\0\1\u0148"+
    "\53\0\3\3\2\0\5\3\17\0\7\3\1\u01bd\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\372\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\331\17\3"+
    "\2\0\3\3\2\0\4\3\1\u018f\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\5\3\1\101\21\3\2\0"+
    "\3\3\2\0\5\3\17\0\13\3\1\u01be\13\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\100\22\3\2\0"+
    "\3\3\2\0\4\3\1\u01bf\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\u01c0\26\3\2\0\3\3\2\0"+
    "\5\3\17\0\22\3\1\267\4\3\2\0\3\3\2\0"+
    "\3\3\1\u01c1\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\u01c2\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\u01c3\21\3\2\0\3\3\2\0"+
    "\2\3\1\u01c4\2\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\u01c5\6\3\1\u01c6\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u01c7\17\3\35\0"+
    "\1\u01c8\26\0\3\3\2\0\5\3\17\0\5\3\1\u01b8"+
    "\21\3\2\0\3\3\2\0\5\3\17\0\1\u01a4\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\6\3\1\u01c9\20\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u0141\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\24\3\1\u0105\2\3"+
    "\2\0\3\3\2\0\5\3\17\0\6\3\1\100\20\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u01ca\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\u01cb\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\u01cc\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\u01cd\11\3"+
    "\2\0\3\3\2\0\4\3\1\u010e\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\17\3\1\257\7\3\2\0"+
    "\3\3\2\0\5\3\17\0\10\3\1\u01ce\16\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u01cf\2\3\1\u01d0"+
    "\6\3\2\0\3\3\2\0\3\3\1\267\1\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u01ae"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u01d1"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u01d2"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\5\3\1\331"+
    "\21\3\2\0\3\3\2\0\5\3\17\0\14\3\1\u01d3"+
    "\12\3\2\0\3\3\2\0\2\3\1\u01d4\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\5\3\1\u01d5"+
    "\21\3\2\0\3\3\2\0\5\3\17\0\5\3\1\u01d6"+
    "\1\3\1\u01c0\17\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\222\21\3\2\0\3\3\2\0\5\3\17\0"+
    "\21\3\1\100\5\3\2\0\3\3\2\0\5\3\17\0"+
    "\13\3\1\u01d7\13\3\2\0\3\3\2\0\5\3\17\0"+
    "\7\3\1\u01d8\17\3\2\0\3\3\2\0\3\3\1\u01d9"+
    "\1\3\17\0\27\3\2\0\3\3\2\0\5\3\17\0"+
    "\14\3\1\310\12\3\2\0\3\3\2\0\5\3\17\0"+
    "\14\3\1\267\12\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\375\24\3\2\0\3\3\2\0\5\3\17\0"+
    "\14\3\1\u01da\12\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\u01db\24\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\u01dc\24\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\u01dd\26\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u01de\12\3\2\0\3\3\2\0\5\3\17\0\1\3"+
    "\1\u01df\1\3\1\u01e0\1\3\1\u01e1\20\3\1\u01e2\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\u01e3\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u015d\24\3\2\0"+
    "\3\3\2\0\4\3\1\u01e4\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u01e5\24\3\2\0\3\3"+
    "\2\0\5\3\17\0\7\3\1\u010f\17\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u01e6\22\3\2\0\3\3"+
    "\2\0\4\3\1\u01e7\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\u01e8\26\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u01e9\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\1\u01ea\13\3\1\u01eb\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\u01ec\22\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u0171\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\22\3\1\331\4\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\u01ed\26\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u01ee\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u01ef\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\14\3\1\222\12\3\2\0\1\3\1\u0199\1\3"+
    "\2\0\5\3\17\0\1\u01f0\26\3\2\0\3\3\2\0"+
    "\5\3\17\0\21\3\1\u01f1\5\3\2\0\3\3\2\0"+
    "\5\3\17\0\4\3\1\u01f2\22\3\2\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\u01f3\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\136\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\11\3\1\u01f4\15\3\2\0\3\3\2\0"+
    "\4\3\1\u01f5\17\0\27\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\125\24\3\2\0\3\3\2\0\4\3"+
    "\1\u01f6\17\0\27\3\2\0\3\3\2\0\5\3\17\0"+
    "\3\3\1\77\23\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\u01f7\16\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\u01f8\11\3\1\257\7\3\2\0\3\3\2\0"+
    "\3\3\1\u01f9\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\u01fa\12\3\2\0\3\3\2\0"+
    "\2\3\1\u01fb\2\3\17\0\5\3\1\222\21\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\u01fc\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\101\26\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\3\1\u01fd\25\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u01fe\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\10\3\1\222\16\3\2\0\3\3"+
    "\2\0\5\3\17\0\15\3\1\257\11\3\2\0\3\3"+
    "\2\0\5\3\17\0\5\3\1\u01ff\21\3\2\0\3\3"+
    "\2\0\5\3\17\0\14\3\1\u0200\12\3\2\0\3\3"+
    "\2\0\2\3\1\u0201\2\3\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\14\3\1\u0202\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\22\3\1\u0203\4\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\3\1\u0145\25\3\2\0\3\3"+
    "\2\0\5\3\17\0\2\3\1\u0204\24\3\2\0\3\3"+
    "\2\0\4\3\1\u0205\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\5\3\1\u0206\21\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\77\6\3\1\u01f9\17\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\372\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\u0207\26\3\2\0\3\3\2\0"+
    "\5\3\17\0\11\3\1\u0183\15\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u016b\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u0208\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\14\3\1\u0209\12\3\2\0\3\3\2\0"+
    "\5\3\17\0\2\3\1\u020a\24\3\2\0\3\3\2\0"+
    "\5\3\17\0\11\3\1\77\15\3\2\0\3\3\2\0"+
    "\2\3\1\267\2\3\17\0\27\3\2\0\3\3\2\0"+
    "\3\3\1\367\1\3\17\0\27\3\2\0\3\3\2\0"+
    "\5\3\17\0\10\3\1\u0111\16\3\2\0\3\3\2\0"+
    "\5\3\17\0\23\3\1\331\3\3\2\0\3\3\2\0"+
    "\5\3\17\0\1\260\26\3\2\0\3\3\2\0\5\3"+
    "\17\0\5\3\1\u020b\21\3\2\0\3\3\2\0\5\3"+
    "\17\0\1\115\26\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\100\21\3\2\0\3\3\2\0\4\3\1\222"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\5\3"+
    "\1\u020c\21\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u020d\12\3\2\0\3\3\2\0\5\3\17\0\7\3"+
    "\1\u0202\17\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u020e\12\3\2\0\3\3\2\0\2\3\1\u01a4\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\2\3\1\u020f\2\3"+
    "\17\0\27\3\36\0\1\u0210\25\0\3\3\2\0\5\3"+
    "\17\0\4\3\1\u0211\22\3\2\0\3\3\2\0\5\3"+
    "\17\0\15\3\1\u0212\11\3\2\0\3\3\2\0\5\3"+
    "\17\0\14\3\1\214\12\3\2\0\3\3\2\0\5\3"+
    "\17\0\5\3\1\u017c\21\3\2\0\3\3\2\0\4\3"+
    "\1\u018c\17\0\1\u0104\26\3\2\0\3\3\2\0\5\3"+
    "\17\0\7\3\1\u0213\17\3\2\0\3\3\2\0\5\3"+
    "\17\0\4\3\1\u0214\22\3\2\0\3\3\2\0\5\3"+
    "\17\0\7\3\1\u0215\17\3\2\0\3\3\2\0\5\3"+
    "\17\0\14\3\1\205\12\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\55\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\10\3\1\u01a1\16\3\2\0\3\3\2\0\5\3"+
    "\17\0\11\3\1\u0216\15\3\2\0\3\3\2\0\5\3"+
    "\17\0\2\3\1\u0217\24\3\2\0\3\3\2\0\5\3"+
    "\17\0\14\3\1\u01a4\12\3\2\0\3\3\2\0\5\3"+
    "\17\0\1\u01ba\26\3\2\0\3\3\2\0\3\3\1\375"+
    "\1\3\17\0\27\3\2\0\3\3\2\0\5\3\17\0"+
    "\14\3\1\u0218\12\3\2\0\3\3\2\0\5\3\17\0"+
    "\15\3\1\274\11\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\205\21\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\3\1\u0219\25\3\2\0\3\3\2\0\5\3\17\0"+
    "\5\3\1\226\21\3\2\0\3\3\2\0\4\3\1\u021a"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\1\u021b"+
    "\26\3\2\0\3\3\2\0\5\3\17\0\22\3\1\u0105"+
    "\4\3\2\0\3\3\2\0\5\3\17\0\7\3\1\u021c"+
    "\17\3\2\0\3\3\2\0\3\3\1\u021d\1\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\1\u021e\26\3"+
    "\2\0\3\3\2\0\2\3\1\u021f\2\3\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u0220\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\7\3\1\104\17\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\3\1\u0221\25\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\u01c9\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\14\3\1\u0222\12\3"+
    "\2\0\3\3\2\0\2\3\1\u0144\2\3\17\0\27\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0223\21\3"+
    "\2\0\3\3\2\0\5\3\17\0\4\3\1\u0224\22\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\u0128\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\15\3\1\u0225\11\3"+
    "\2\0\3\3\2\0\5\3\17\0\10\3\1\u0226\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\6\3\1\u0227\20\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\u0228\24\3"+
    "\2\0\3\3\2\0\5\3\17\0\17\3\1\331\7\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u0229\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u01ba\17\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u022a\24\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\u022b\26\3\2\0\3\3"+
    "\2\0\5\3\17\0\15\3\1\u0122\6\3\1\267\2\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\3\1\100\25\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u022c\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u022d\11\3\2\0"+
    "\3\3\2\0\5\3\17\0\14\3\1\u022e\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\14\3\1\372\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\5\3\1\u010e\21\3\2\0"+
    "\3\3\2\0\5\3\17\0\14\3\1\u022f\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\7\3\1\u0230\17\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\u0231\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u0232\11\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\77\26\3\2\0\3\3"+
    "\2\0\5\3\17\0\22\3\1\u0233\4\3\2\0\3\3"+
    "\2\0\5\3\17\0\14\3\1\375\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\5\3\1\u0183\21\3\2\0\3\3"+
    "\2\0\5\3\17\0\5\3\1\u0234\21\3\2\0\3\3"+
    "\2\0\5\3\17\0\24\3\1\257\2\3\2\0\3\3"+
    "\2\0\2\3\1\u0235\2\3\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\14\3\1\u0236\12\3\2\0\3\3"+
    "\2\0\5\3\17\0\1\306\1\3\1\266\24\3\2\0"+
    "\3\3\2\0\5\3\17\0\6\3\1\u022b\4\3\1\100"+
    "\13\3\2\0\3\3\2\0\5\3\17\0\13\3\1\u0237"+
    "\13\3\2\0\3\3\2\0\2\3\1\u0122\2\3\17\0"+
    "\27\3\35\0\1\u0238\26\0\3\3\2\0\5\3\17\0"+
    "\1\u0239\26\3\2\0\3\3\2\0\2\3\1\u023a\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\1\105"+
    "\26\3\2\0\3\3\2\0\2\3\1\u023b\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\14\3\1\u023c"+
    "\12\3\2\0\3\3\2\0\2\3\1\u023d\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\1\3\1\u023e"+
    "\25\3\2\0\3\3\2\0\3\3\1\u01c0\1\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u023f"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u0240"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\23\3\1\u0241"+
    "\3\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u01dd"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\6\3\1\u0141"+
    "\20\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u0242"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\5\3\1\u0243"+
    "\21\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u0244"+
    "\24\3\2\0\3\3\2\0\2\3\1\u0245\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\1\u0246\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\2\3\1\77\11\3"+
    "\1\u014b\12\3\2\0\3\3\2\0\5\3\17\0\6\3"+
    "\1\u0247\20\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u0248\22\3\2\0\3\3\2\0\5\3\17\0\7\3"+
    "\1\u0205\17\3\2\0\3\3\2\0\5\3\17\0\3\3"+
    "\1\u0249\23\3\2\0\3\3\2\0\5\3\17\0\10\3"+
    "\1\u022b\16\3\2\0\3\3\2\0\2\3\1\u024a\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u0183\22\3\2\0\3\3\2\0\4\3\1\u024b\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\14\3\1\u016a"+
    "\12\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u024c"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u024d"+
    "\22\3\2\0\3\3\2\0\2\3\1\u024e\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\14\3\1\u024f"+
    "\12\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u0250"+
    "\22\3\2\0\1\3\1\u0251\1\3\2\0\5\3\17\0"+
    "\27\3\2\0\3\3\2\0\2\3\1\u010e\2\3\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\17\3\1\u0252"+
    "\7\3\2\0\3\3\2\0\5\3\17\0\20\3\1\u01a1"+
    "\6\3\2\0\3\3\2\0\3\3\1\u0253\1\3\17\0"+
    "\27\3\43\0\1\u0254\20\0\3\3\2\0\5\3\17\0"+
    "\22\3\1\u0255\4\3\2\0\3\3\2\0\5\3\17\0"+
    "\24\3\1\u018a\2\3\2\0\3\3\2\0\5\3\17\0"+
    "\2\3\1\u0256\24\3\2\0\3\3\2\0\5\3\17\0"+
    "\17\3\1\u0219\7\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\250\16\3\2\0\3\3\2\0\5\3\17\0"+
    "\10\3\1\u0257\16\3\2\0\3\3\2\0\5\3\17\0"+
    "\17\3\1\250\7\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\u0258\26\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u0259\11\3\2\0\1\3\1\u025a\1\3\2\0\5\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\266\24\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u025b\11\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u025c\12\3\2\0\3\3\2\0\5\3\17\0\7\3"+
    "\1\u025d\17\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\u025e\24\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u025b\22\3\2\0\3\3\2\0\5\3\17\0\17\3"+
    "\1\176\7\3\2\0\3\3\2\0\5\3\17\0\16\3"+
    "\1\u025f\10\3\2\0\3\3\2\0\5\3\17\0\16\3"+
    "\1\u0260\10\3\2\0\3\3\2\0\5\3\17\0\10\3"+
    "\1\u0261\16\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0262\12\3\2\0\3\3\2\0\5\3\17\0\5\3"+
    "\1\u0263\21\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u0243\22\3\2\0\3\3\2\0\5\3\17\0\6\3"+
    "\1\130\20\3\2\0\1\3\1\u0264\1\3\2\0\5\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\7\3"+
    "\1\u0105\17\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u0265\11\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\222\24\3\2\0\3\3\2\0\3\3\1\u01a5\1\3"+
    "\17\0\1\3\1\372\2\3\1\u0266\22\3\2\0\3\3"+
    "\2\0\5\3\17\0\4\3\1\u0267\22\3\2\0\3\3"+
    "\2\0\2\3\1\u0268\2\3\17\0\27\3\2\0\3\3"+
    "\2\0\2\3\1\264\2\3\17\0\27\3\2\0\3\3"+
    "\2\0\5\3\17\0\5\3\1\u0117\21\3\2\0\1\3"+
    "\1\u0269\1\3\2\0\5\3\17\0\10\3\1\u0257\16\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u026a\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u026b\3\3\1\u026c"+
    "\5\3\2\0\3\3\2\0\5\3\17\0\10\3\1\u0141"+
    "\16\3\2\0\3\3\2\0\5\3\17\0\7\3\1\u0130"+
    "\17\3\2\0\3\3\2\0\5\3\17\0\12\3\1\u026d"+
    "\7\3\1\u026e\4\3\2\0\3\3\2\0\5\3\17\0"+
    "\7\3\1\u026f\17\3\2\0\3\3\2\0\5\3\17\0"+
    "\14\3\1\u0270\12\3\2\0\3\3\2\0\5\3\17\0"+
    "\1\306\26\3\2\0\3\3\2\0\5\3\17\0\4\3"+
    "\1\u020a\22\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0271\12\3\2\0\3\3\2\0\3\3\1\u0272\1\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0273\12\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\u0274\24\3\2\0\3\3\2\0\5\3\17\0\7\3"+
    "\1\u0275\17\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u0276\12\3\2\0\3\3\2\0\3\3\1\u0277\1\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\22\3"+
    "\1\u0278\4\3\2\0\3\3\2\0\2\3\1\u0279\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\1\3"+
    "\1\u0190\25\3\2\0\3\3\2\0\5\3\17\0\22\3"+
    "\1\u027a\4\3\2\0\3\3\2\0\5\3\17\0\16\3"+
    "\1\u027b\10\3\2\0\3\3\2\0\3\3\1\u010f\1\3"+
    "\17\0\27\3\2\0\3\3\2\0\2\3\1\u018f\2\3"+
    "\17\0\27\3\2\0\3\3\2\0\5\3\17\0\5\3"+
    "\1\u0128\21\3\2\0\3\3\2\0\5\3\17\0\2\3"+
    "\1\u027c\24\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u018a\11\3\2\0\3\3\2\0\5\3\17\0\14\3"+
    "\1\u027d\12\3\2\0\3\3\2\0\5\3\17\0\6\3"+
    "\1\u027e\20\3\2\0\3\3\2\0\5\3\17\0\15\3"+
    "\1\u01cf\11\3\2\0\3\3\2\0\4\3\1\u027f\17\0"+
    "\27\3\2\0\3\3\2\0\5\3\17\0\12\3\1\u0280"+
    "\14\3\2\0\3\3\2\0\5\3\17\0\1\u0281\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0282\21\3"+
    "\2\0\3\3\2\0\5\3\17\0\5\3\1\u0283\21\3"+
    "\2\0\3\3\2\0\5\3\17\0\1\u0284\26\3\2\0"+
    "\3\3\2\0\5\3\17\0\14\3\1\u0285\12\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u0286\11\3\2\0"+
    "\3\3\2\0\5\3\17\0\4\3\1\u0287\22\3\2\0"+
    "\3\3\2\0\5\3\17\0\2\3\1\u0288\24\3\2\0"+
    "\3\3\2\0\5\3\17\0\16\3\1\u0289\10\3\2\0"+
    "\3\3\2\0\5\3\17\0\1\3\1\u028a\2\3\1\u0267"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\2\3\1\u028b"+
    "\24\3\2\0\3\3\2\0\5\3\17\0\4\3\1\u028c"+
    "\22\3\2\0\3\3\2\0\5\3\17\0\1\u028d\26\3"+
    "\2\0\3\3\2\0\5\3\17\0\14\3\1\u028e\12\3"+
    "\2\0\3\3\2\0\4\3\1\u028f\17\0\27\3\2\0"+
    "\3\3\2\0\5\3\17\0\15\3\1\u0288\11\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31850];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\12\1\1\11\51\1\1\0\1\1\1\0"+
    "\u011f\1\1\0\156\1\1\0\107\1\1\0\47\1\1\0"+
    "\33\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
public String lexeme;
public int linea;
public int PrimeraColumna;
public int UltimaColumna;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 184) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return ERROR;
            } 
            // fall through
          case 11: break;
          case 2: 
            { lexeme=yytext(); linea=yyline; PrimeraColumna=yycolumn +1 ; UltimaColumna=yycolumn+yylength(); return Identificador;
            } 
            // fall through
          case 12: break;
          case 3: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Int;
            } 
            // fall through
          case 13: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 14: break;
          case 5: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Bit;
            } 
            // fall through
          case 15: break;
          case 6: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Simbolo;
            } 
            // fall through
          case 16: break;
          case 7: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return Float;
            } 
            // fall through
          case 17: break;
          case 8: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn +1; UltimaColumna=yycolumn+yylength(); return Palabra_Reservada;
            } 
            // fall through
          case 18: break;
          case 9: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return ComentarioSimple;
            } 
            // fall through
          case 19: break;
          case 10: 
            { lexeme=yytext(); linea=yyline + 1; PrimeraColumna=yycolumn + 1; UltimaColumna=yycolumn+yylength(); return FloatError;
            } 
            // fall through
          case 20: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
